<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='CPTGradientElement' type64='{_CPTGradientElement=&quot;color&quot;{_CPTRGBAColor=&quot;red&quot;d&quot;green&quot;d&quot;blue&quot;d&quot;alpha&quot;d}&quot;position&quot;d&quot;nextElement&quot;^{_CPTGradientElement}}' type='{_CPTGradientElement=&quot;color&quot;{_CPTRGBAColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}&quot;position&quot;f&quot;nextElement&quot;^{_CPTGradientElement}}'>
<field name='color' type64='{_CPTRGBAColor=&quot;red&quot;d&quot;green&quot;d&quot;blue&quot;d&quot;alpha&quot;d}' declared_type='CPTRGBAColor' type='{_CPTRGBAColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}'/>
<field name='position' type64='d' declared_type='CGFloat' type='f'/>
<field name='nextElement' type64='^{_CPTGradientElement={_CPTRGBAColor=dddd}d^{_CPTGradientElement}}' declared_type='struct _CPTGradientElement*' type='^{_CPTGradientElement={_CPTRGBAColor=ffff}f^{_CPTGradientElement}}'/>
</struct>
<struct name='CPTNumericDataType' type64='{_CPTNumericDataType=&quot;dataTypeFormat&quot;i&quot;sampleBytes&quot;Q&quot;byteOrder&quot;q}' type='{_CPTNumericDataType=&quot;dataTypeFormat&quot;i&quot;sampleBytes&quot;I&quot;byteOrder&quot;i}'>
<field name='dataTypeFormat' declared_type='CPTDataTypeFormat' type='i'/>
<field name='sampleBytes' type64='Q' declared_type='size_t' type='L'/>
<field name='byteOrder' type64='q' declared_type='CFByteOrder' type='l'/>
</struct>
<struct name='CPTRGBAColor' type64='{_CPTRGBAColor=&quot;red&quot;d&quot;green&quot;d&quot;blue&quot;d&quot;alpha&quot;d}' type='{_CPTRGBAColor=&quot;red&quot;f&quot;green&quot;f&quot;blue&quot;f&quot;alpha&quot;f}'>
<field name='red' type64='d' declared_type='CGFloat' type='f'/>
<field name='green' type64='d' declared_type='CGFloat' type='f'/>
<field name='blue' type64='d' declared_type='CGFloat' type='f'/>
<field name='alpha' type64='d' declared_type='CGFloat' type='f'/>
</struct>
<constant const='true' name='CPTBarPlotBindingBarBases' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTBarPlotBindingBarFills' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTBarPlotBindingBarLineStyles' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTBarPlotBindingBarLocations' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTBarPlotBindingBarTips' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTDataException' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTException' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTGraphNeedsRedrawNotification' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTLayerBoundsDidChangeNotification' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTLegendNeedsLayoutForPlotNotification' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTLegendNeedsRedrawForPlotNotification' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTLegendNeedsReloadEntriesForPlotNotification' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTNumericDataException' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTPieChartBindingPieSliceFills' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTPieChartBindingPieSliceRadialOffsets' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTPieChartBindingPieSliceWidthValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTPlotBindingDataLabels' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTPlotSpaceCoordinateMappingDidChangeNotification' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTRangePlotBindingBarLineStyles' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTRangePlotBindingHighValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTRangePlotBindingLeftValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTRangePlotBindingLowValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTRangePlotBindingRightValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTRangePlotBindingXValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTRangePlotBindingYValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTScatterPlotBindingPlotSymbols' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTScatterPlotBindingXValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTScatterPlotBindingYValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTTradingRangePlotBindingCloseValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTTradingRangePlotBindingDecreaseFills' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTTradingRangePlotBindingDecreaseLineStyles' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTTradingRangePlotBindingHighValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTTradingRangePlotBindingIncreaseFills' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTTradingRangePlotBindingIncreaseLineStyles' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTTradingRangePlotBindingLineStyles' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTTradingRangePlotBindingLowValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTTradingRangePlotBindingOpenValues' declared_type='NSString*' type='@'/>
<constant const='true' name='CPTTradingRangePlotBindingXValues' declared_type='NSString*' type='@'/>
<constant const='true' name='kCPTDarkGradientTheme' declared_type='NSString*' type='@'/>
<constant const='true' name='kCPTPlainBlackTheme' declared_type='NSString*' type='@'/>
<constant const='true' name='kCPTPlainWhiteTheme' declared_type='NSString*' type='@'/>
<constant const='true' name='kCPTSlateTheme' declared_type='NSString*' type='@'/>
<constant const='true' name='kCPTStocksTheme' declared_type='NSString*' type='@'/>
<constant const='true' name='kCPTTextLayerMarginWidth' type64='d' declared_type='CGFloat' type='f'/>
<string_constant name='COREPLOT_STABILITY' value='___dtrace_stability$CorePlot$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0'/>
<string_constant name='COREPLOT_TYPEDEFS' value='___dtrace_typedefs$CorePlot$v2'/>
<enum name='COCOAPODS_VERSION_MAJOR_CorePlot' value='1'/>
<enum name='COCOAPODS_VERSION_MINOR_CorePlot' value='4'/>
<enum name='COCOAPODS_VERSION_PATCH_CorePlot' value='0'/>
<enum name='CPTAlignmentBottom' value='5'/>
<enum name='CPTAlignmentCenter' value='1'/>
<enum name='CPTAlignmentLeft' value='0'/>
<enum name='CPTAlignmentMiddle' value='4'/>
<enum name='CPTAlignmentRight' value='2'/>
<enum name='CPTAlignmentTop' value='3'/>
<enum name='CPTAnimationCurveBackIn' value='2'/>
<enum name='CPTAnimationCurveBackInOut' value='4'/>
<enum name='CPTAnimationCurveBackOut' value='3'/>
<enum name='CPTAnimationCurveBounceIn' value='5'/>
<enum name='CPTAnimationCurveBounceInOut' value='7'/>
<enum name='CPTAnimationCurveBounceOut' value='6'/>
<enum name='CPTAnimationCurveCircularIn' value='8'/>
<enum name='CPTAnimationCurveCircularInOut' value='10'/>
<enum name='CPTAnimationCurveCircularOut' value='9'/>
<enum name='CPTAnimationCurveCubicIn' value='20'/>
<enum name='CPTAnimationCurveCubicInOut' value='22'/>
<enum name='CPTAnimationCurveCubicOut' value='21'/>
<enum name='CPTAnimationCurveDefault' value='0'/>
<enum name='CPTAnimationCurveElasticIn' value='11'/>
<enum name='CPTAnimationCurveElasticInOut' value='13'/>
<enum name='CPTAnimationCurveElasticOut' value='12'/>
<enum name='CPTAnimationCurveExponentialIn' value='14'/>
<enum name='CPTAnimationCurveExponentialInOut' value='16'/>
<enum name='CPTAnimationCurveExponentialOut' value='15'/>
<enum name='CPTAnimationCurveLinear' value='1'/>
<enum name='CPTAnimationCurveQuadraticIn' value='23'/>
<enum name='CPTAnimationCurveQuadraticInOut' value='25'/>
<enum name='CPTAnimationCurveQuadraticOut' value='24'/>
<enum name='CPTAnimationCurveQuarticIn' value='26'/>
<enum name='CPTAnimationCurveQuarticInOut' value='28'/>
<enum name='CPTAnimationCurveQuarticOut' value='27'/>
<enum name='CPTAnimationCurveQuinticIn' value='29'/>
<enum name='CPTAnimationCurveQuinticInOut' value='31'/>
<enum name='CPTAnimationCurveQuinticOut' value='30'/>
<enum name='CPTAnimationCurveSinusoidalIn' value='17'/>
<enum name='CPTAnimationCurveSinusoidalInOut' value='19'/>
<enum name='CPTAnimationCurveSinusoidalOut' value='18'/>
<enum name='CPTAxisLabelingPolicyAutomatic' value='3'/>
<enum name='CPTAxisLabelingPolicyEqualDivisions' value='4'/>
<enum name='CPTAxisLabelingPolicyFixedInterval' value='2'/>
<enum name='CPTAxisLabelingPolicyLocationsProvided' value='1'/>
<enum name='CPTAxisLabelingPolicyNone' value='0'/>
<enum name='CPTBarPlotFieldBarBase' value='2'/>
<enum name='CPTBarPlotFieldBarLocation' value='0'/>
<enum name='CPTBarPlotFieldBarTip' value='1'/>
<enum name='CPTChromaticBlendingMode' value='1'/>
<enum name='CPTComplexFloatingPointDataType' value='4'/>
<enum name='CPTCoordinateX' value='0'/>
<enum name='CPTCoordinateY' value='1'/>
<enum name='CPTCoordinateZ' value='2'/>
<enum name='CPTDataOrderColumnsFirst' value='1'/>
<enum name='CPTDataOrderRowsFirst' value='0'/>
<enum name='CPTDecimalDataType' value='5'/>
<enum name='CPTErrorBarTypeConstantRatio' value='1'/>
<enum name='CPTErrorBarTypeConstantValue' value='2'/>
<enum name='CPTErrorBarTypeCustom' value='0'/>
<enum name='CPTFloatingPointDataType' value='3'/>
<enum name='CPTGradientTypeAxial' value='0'/>
<enum name='CPTGradientTypeRadial' value='1'/>
<enum name='CPTGraphLayerTypeAxisLabels' value='4'/>
<enum name='CPTGraphLayerTypeAxisLines' value='2'/>
<enum name='CPTGraphLayerTypeAxisTitles' value='5'/>
<enum name='CPTGraphLayerTypeMajorGridLines' value='1'/>
<enum name='CPTGraphLayerTypeMinorGridLines' value='0'/>
<enum name='CPTGraphLayerTypePlots' value='3'/>
<enum name='CPTIntegerDataType' value='1'/>
<enum name='CPTInverseChromaticBlendingMode' value='2'/>
<enum name='CPTLineCapTypeBar' value='9'/>
<enum name='CPTLineCapTypeCross' value='10'/>
<enum name='CPTLineCapTypeCustom' value='12'/>
<enum name='CPTLineCapTypeDiamond' value='6'/>
<enum name='CPTLineCapTypeEllipse' value='5'/>
<enum name='CPTLineCapTypeHexagon' value='8'/>
<enum name='CPTLineCapTypeNone' value='0'/>
<enum name='CPTLineCapTypeOpenArrow' value='1'/>
<enum name='CPTLineCapTypePentagon' value='7'/>
<enum name='CPTLineCapTypeRectangle' value='4'/>
<enum name='CPTLineCapTypeSnow' value='11'/>
<enum name='CPTLineCapTypeSolidArrow' value='2'/>
<enum name='CPTLineCapTypeSweptArrow' value='3'/>
<enum name='CPTLinearBlendingMode' value='0'/>
<enum name='CPTNumericTypeDouble' value='2'/>
<enum name='CPTNumericTypeFloat' value='1'/>
<enum name='CPTNumericTypeInteger' value='0'/>
<enum name='CPTPieChartFieldSliceWidth' value='0'/>
<enum name='CPTPieChartFieldSliceWidthNormalized' value='1'/>
<enum name='CPTPieChartFieldSliceWidthSum' value='2'/>
<enum name='CPTPieDirectionClockwise' value='0'/>
<enum name='CPTPieDirectionCounterClockwise' value='1'/>
<enum name='CPTPlotCachePrecisionAuto' value='0'/>
<enum name='CPTPlotCachePrecisionDecimal' value='2'/>
<enum name='CPTPlotCachePrecisionDouble' value='1'/>
<enum name='CPTPlotRangeComparisonResultNumberAboveRange' value='2'/>
<enum name='CPTPlotRangeComparisonResultNumberBelowRange' value='0'/>
<enum name='CPTPlotRangeComparisonResultNumberInRange' value='1'/>
<enum name='CPTPlotSymbolTypeCross' value='8'/>
<enum name='CPTPlotSymbolTypeCustom' value='12'/>
<enum name='CPTPlotSymbolTypeDash' value='10'/>
<enum name='CPTPlotSymbolTypeDiamond' value='3'/>
<enum name='CPTPlotSymbolTypeEllipse' value='2'/>
<enum name='CPTPlotSymbolTypeHexagon' value='7'/>
<enum name='CPTPlotSymbolTypeNone' value='0'/>
<enum name='CPTPlotSymbolTypePentagon' value='6'/>
<enum name='CPTPlotSymbolTypePlus' value='9'/>
<enum name='CPTPlotSymbolTypeRectangle' value='1'/>
<enum name='CPTPlotSymbolTypeSnow' value='11'/>
<enum name='CPTPlotSymbolTypeStar' value='5'/>
<enum name='CPTPlotSymbolTypeTriangle' value='4'/>
<enum name='CPTRangePlotFieldHigh' value='2'/>
<enum name='CPTRangePlotFieldLeft' value='4'/>
<enum name='CPTRangePlotFieldLow' value='3'/>
<enum name='CPTRangePlotFieldRight' value='5'/>
<enum name='CPTRangePlotFieldX' value='0'/>
<enum name='CPTRangePlotFieldY' value='1'/>
<enum name='CPTRectAnchorBottom' value='1'/>
<enum name='CPTRectAnchorBottomLeft' value='0'/>
<enum name='CPTRectAnchorBottomRight' value='2'/>
<enum name='CPTRectAnchorCenter' value='8'/>
<enum name='CPTRectAnchorLeft' value='3'/>
<enum name='CPTRectAnchorRight' value='4'/>
<enum name='CPTRectAnchorTop' value='6'/>
<enum name='CPTRectAnchorTopLeft' value='5'/>
<enum name='CPTRectAnchorTopRight' value='7'/>
<enum name='CPTScaleTypeAngular' value='2'/>
<enum name='CPTScaleTypeCategory' value='4'/>
<enum name='CPTScaleTypeDateTime' value='3'/>
<enum name='CPTScaleTypeLinear' value='0'/>
<enum name='CPTScaleTypeLog' value='1'/>
<enum name='CPTScatterPlotFieldX' value='0'/>
<enum name='CPTScatterPlotFieldY' value='1'/>
<enum name='CPTScatterPlotInterpolationCurved' value='3'/>
<enum name='CPTScatterPlotInterpolationHistogram' value='2'/>
<enum name='CPTScatterPlotInterpolationLinear' value='0'/>
<enum name='CPTScatterPlotInterpolationStepped' value='1'/>
<enum name='CPTSignNegative' value='-1'/>
<enum name='CPTSignNone' value='0'/>
<enum name='CPTSignPositive' value='1'/>
<enum name='CPTTextAlignmentCenter' value='1'/>
<enum name='CPTTextAlignmentJustified' value='3'/>
<enum name='CPTTextAlignmentLeft' value='0'/>
<enum name='CPTTextAlignmentNatural' value='4'/>
<enum name='CPTTextAlignmentRight' value='2'/>
<enum name='CPTTradingRangePlotFieldClose' value='4'/>
<enum name='CPTTradingRangePlotFieldHigh' value='2'/>
<enum name='CPTTradingRangePlotFieldLow' value='3'/>
<enum name='CPTTradingRangePlotFieldOpen' value='1'/>
<enum name='CPTTradingRangePlotFieldX' value='0'/>
<enum name='CPTTradingRangePlotStyleCandleStick' value='1'/>
<enum name='CPTTradingRangePlotStyleOHLC' value='0'/>
<enum name='CPTUndefinedDataType' value='0'/>
<enum name='CPTUnsignedIntegerDataType' value='2'/>
<enum name='CPT_SDK_SUPPORTS_WEAK' value='0'/>
<function name='AddRoundedRectPath'>
<arg name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg name='cornerRadius' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CPTAlignIntegralPointToUserSpace'>
<arg name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='CPTAlignIntegralRectToUserSpace'>
<arg name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</function>
<function name='CPTAlignPointToUserSpace'>
<arg name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</function>
<function name='CPTAlignRectToUserSpace'>
<arg name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</function>
<function name='CPTAlignSizeToUserSpace'>
<arg name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg name='size' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</function>
<function name='CPTAnimationTimingFunctionBackIn'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionBackInOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionBackOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionBounceIn'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionBounceInOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionBounceOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionCircularIn'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionCircularInOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionCircularOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionCubicIn'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionCubicInOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionCubicOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionElasticIn'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionElasticInOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionElasticOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionExponentialIn'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionExponentialInOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionExponentialOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionLinear'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionQuadraticIn'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionQuadraticInOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionQuadraticOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionQuarticIn'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionQuarticInOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionQuarticOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionQuinticIn'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionQuinticInOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionQuinticOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionSinusoidalIn'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionSinusoidalInOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTAnimationTimingFunctionSinusoidalOut'>
<arg name='time' type64='d' declared_type='CGFloat' type='f'/>
<arg name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTDataType'>
<arg name='format' declared_type='CPTDataTypeFormat' type='i'/>
<arg name='sampleBytes' type64='Q' declared_type='size_t' type='L'/>
<arg name='byteOrder' type64='q' declared_type='CFByteOrder' type='l'/>
<retval type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
</function>
<function name='CPTDataTypeEqualToDataType'>
<arg name='dataType1' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<arg name='dataType2' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='CPTDataTypeIsSupported'>
<arg name='format' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='CPTDataTypeStringFromDataType'>
<arg name='dataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='CPTDataTypeWithDataTypeString'>
<arg name='dataTypeString' declared_type='NSString*' type='@'/>
<retval type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
</function>
<function name='CPTDecimalAbs'>
<arg name='value' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalAdd'>
<arg name='leftOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='rightOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalCGFloatValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<function name='CPTDecimalCharValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='int8_t' type='c'/>
</function>
<function name='CPTDecimalDivide'>
<arg name='numerator' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='denominator' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalDoubleValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='CPTDecimalEquals'>
<arg name='leftOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='rightOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='CPTDecimalFloatValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='float' type='f'/>
</function>
<function name='CPTDecimalFromCGFloat'>
<arg name='aCGFloat' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromChar'>
<arg name='anInt' declared_type='int8_t' type='c'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromDouble'>
<arg name='aDouble' declared_type='double' type='d'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromFloat'>
<arg name='aFloat' declared_type='float' type='f'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromInt'>
<arg name='i' declared_type='int' type='i'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromInteger'>
<arg name='i' type64='q' declared_type='NSInteger' type='i'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromLong'>
<arg name='anInt' declared_type='int32_t' type='i'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromLongLong'>
<arg name='anInt' declared_type='int64_t' type='q'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromShort'>
<arg name='anInt' declared_type='int16_t' type='s'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromString'>
<arg name='stringRepresentation' declared_type='NSString*' type='@'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromUnsignedChar'>
<arg name='i' declared_type='uint8_t' type='C'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromUnsignedInt'>
<arg name='i' declared_type='unsigned int' type='I'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromUnsignedInteger'>
<arg name='i' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromUnsignedLong'>
<arg name='i' declared_type='uint32_t' type='I'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromUnsignedLongLong'>
<arg name='i' declared_type='uint64_t' type='Q'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalFromUnsignedShort'>
<arg name='i' declared_type='uint16_t' type='S'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalGreaterThan'>
<arg name='leftOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='rightOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='CPTDecimalGreaterThanOrEqualTo'>
<arg name='leftOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='rightOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='CPTDecimalIntValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='CPTDecimalIntegerValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval type64='q' declared_type='NSInteger' type='i'/>
</function>
<function name='CPTDecimalLessThan'>
<arg name='leftOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='rightOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='CPTDecimalLessThanOrEqualTo'>
<arg name='leftOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='rightOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='CPTDecimalLongLongValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='int64_t' type='q'/>
</function>
<function name='CPTDecimalLongValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='int32_t' type='i'/>
</function>
<function name='CPTDecimalMax'>
<arg name='leftOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='rightOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalMin'>
<arg name='leftOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='rightOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalMultiply'>
<arg name='leftOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='rightOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalNaN'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalShortValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='int16_t' type='s'/>
</function>
<function name='CPTDecimalStringValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='CPTDecimalSubtract'>
<arg name='leftOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg name='rightOperand' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</function>
<function name='CPTDecimalUnsignedCharValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='uint8_t' type='C'/>
</function>
<function name='CPTDecimalUnsignedIntValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='CPTDecimalUnsignedIntegerValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</function>
<function name='CPTDecimalUnsignedLongLongValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='uint64_t' type='Q'/>
</function>
<function name='CPTDecimalUnsignedLongValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='uint32_t' type='I'/>
</function>
<function name='CPTDecimalUnsignedShortValue'>
<arg name='decimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='uint16_t' type='S'/>
</function>
<function name='CPTExpandedRange'>
<arg name='range' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<arg name='expandBy' type64='q' declared_type='NSInteger' type='i'/>
<retval type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
</function>
<function name='CPTGetCurrentContext'>
<retval declared_type='CGContextRef' type='^{CGContext=}'/>
</function>
<function name='CPTOrthogonalCoordinate'>
<arg name='coord' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='CPTCoordinate' type='i'/>
</function>
<function name='CPTPopCGContext'>
<retval declared_type='void' type='v'/>
</function>
<function name='CPTPushCGContext'>
<arg name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='CPTRGBAColorFromCGColor'>
<arg name='color' declared_type='CGColorRef' type='^{CGColor=}'/>
<retval type64='{_CPTRGBAColor=dddd}' declared_type='CPTRGBAColor' type='{_CPTRGBAColor=ffff}'/>
</function>
<function name='CPTStringFromPoint'>
<arg name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='CPTStringFromRect'>
<arg name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='CPTStringFromSize'>
<arg name='size' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='CreateRoundedRectPath'>
<arg name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg name='cornerRadius' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</function>
<function name='squareOfDistanceBetweenPoints'>
<arg name='point1' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg name='point2' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</function>
<class name='CPTAnimation'>
<method selector='addAnimationOperation:'>
<arg index='0' name='animationOperation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:from:to:duration:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='to' type64='d' declared_type='CGFloat' type='f'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:from:to:duration:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='to' type64='d' declared_type='CGFloat' type='f'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='6' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:from:to:duration:withDelay:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='to' type64='d' declared_type='CGFloat' type='f'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='delay' type64='d' declared_type='CGFloat' type='f'/>
<arg index='6' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='7' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromDecimal:toDecimal:duration:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='3' name='to' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromDecimal:toDecimal:duration:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='3' name='to' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='6' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromDecimal:toDecimal:duration:withDelay:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='3' name='to' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='delay' type64='d' declared_type='CGFloat' type='f'/>
<arg index='6' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='7' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromPlotRange:toPlotRange:duration:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' declared_type='CPTPlotRange*' type='@'/>
<arg index='3' name='to' declared_type='CPTPlotRange*' type='@'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromPlotRange:toPlotRange:duration:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' declared_type='CPTPlotRange*' type='@'/>
<arg index='3' name='to' declared_type='CPTPlotRange*' type='@'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='6' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromPlotRange:toPlotRange:duration:withDelay:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' declared_type='CPTPlotRange*' type='@'/>
<arg index='3' name='to' declared_type='CPTPlotRange*' type='@'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='delay' type64='d' declared_type='CGFloat' type='f'/>
<arg index='6' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='7' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromPoint:toPoint:duration:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='3' name='to' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromPoint:toPoint:duration:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='3' name='to' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='6' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromPoint:toPoint:duration:withDelay:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='3' name='to' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='delay' type64='d' declared_type='CGFloat' type='f'/>
<arg index='6' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='7' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromRect:toRect:duration:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='3' name='to' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromRect:toRect:duration:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='3' name='to' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='6' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromRect:toRect:duration:withDelay:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='3' name='to' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='delay' type64='d' declared_type='CGFloat' type='f'/>
<arg index='6' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='7' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromSize:toSize:duration:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='3' name='to' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromSize:toSize:duration:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='3' name='to' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='6' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:fromSize:toSize:duration:withDelay:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='from' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='3' name='to' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='4' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='5' name='delay' type64='d' declared_type='CGFloat' type='f'/>
<arg index='6' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='7' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method class_method='true' selector='animate:property:period:animationCurve:delegate:'>
<arg index='0' name='object' declared_type='id' type='@'/>
<arg index='1' name='property' declared_type='NSString*' type='@'/>
<arg index='2' name='period' declared_type='CPTAnimationPeriod*' type='@'/>
<arg index='3' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<arg index='4' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='CPTAnimationOperation*' type='@'/>
</method>
<method selector='defaultAnimationCurve'>
<retval declared_type='CPTAnimationCurve' type='i'/>
</method>
<method selector='removeAllAnimationOperations'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnimationOperation:'>
<arg index='0' name='animationOperation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultAnimationCurve:'>
<arg index='0' name='defaultAnimationCurve' declared_type='CPTAnimationCurve' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='CPTAnimation*' type='@'/>
</method>
<method selector='timeOffset'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='CPTAnimationOperation'>
<method selector='animationCurve'>
<retval declared_type='CPTAnimationCurve' type='i'/>
</method>
<method selector='boundGetter'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='boundObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='boundSetter'>
<retval declared_type='SEL' type=':'/>
</method>
<method selector='delegate'>
<retval declared_type='NSObject*' type='@'/>
</method>
<method selector='period'>
<retval declared_type='CPTAnimationPeriod*' type='@'/>
</method>
<method selector='setAnimationCurve:'>
<arg index='0' name='animationCurve' declared_type='CPTAnimationCurve' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoundGetter:'>
<arg index='0' name='boundGetter' declared_type='SEL' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoundObject:'>
<arg index='0' name='boundObject' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBoundSetter:'>
<arg index='0' name='boundSetter' declared_type='SEL' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' declared_type='NSObject*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPeriod:'>
<arg index='0' name='period' declared_type='CPTAnimationPeriod*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTAnimationPeriod'>
<method selector='delay'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='duration'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='endValue'>
<retval declared_type='NSValue*' type='@'/>
</method>
<method selector='initWithStart:end:duration:withDelay:'>
<arg index='0' name='aStart' type64='d' declared_type='CGFloat' type='f'/>
<arg index='1' name='anEnd' type64='d' declared_type='CGFloat' type='f'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithStartDecimal:endDecimal:duration:withDelay:'>
<arg index='0' name='aStartDecimal' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='1' name='anEndDecimal' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithStartPlotRange:endPlotRange:duration:withDelay:'>
<arg index='0' name='aStartPlotRange' declared_type='CPTPlotRange*' type='@'/>
<arg index='1' name='anEndPlotRange' declared_type='CPTPlotRange*' type='@'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithStartPoint:endPoint:duration:withDelay:'>
<arg index='0' name='aStartPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='1' name='anEndPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithStartRect:endRect:duration:withDelay:'>
<arg index='0' name='aStartRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='anEndRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithStartSize:endSize:duration:withDelay:'>
<arg index='0' name='aStartSize' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='1' name='anEndSize' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='periodWithStart:end:duration:withDelay:'>
<arg index='0' name='aStart' type64='d' declared_type='CGFloat' type='f'/>
<arg index='1' name='anEnd' type64='d' declared_type='CGFloat' type='f'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='periodWithStartDecimal:endDecimal:duration:withDelay:'>
<arg index='0' name='aStartDecimal' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='1' name='anEndDecimal' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='periodWithStartPlotRange:endPlotRange:duration:withDelay:'>
<arg index='0' name='aStartPlotRange' declared_type='CPTPlotRange*' type='@'/>
<arg index='1' name='anEndPlotRange' declared_type='CPTPlotRange*' type='@'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='periodWithStartPoint:endPoint:duration:withDelay:'>
<arg index='0' name='aStartPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='1' name='anEndPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='periodWithStartRect:endRect:duration:withDelay:'>
<arg index='0' name='aStartRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='anEndRect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='periodWithStartSize:endSize:duration:withDelay:'>
<arg index='0' name='aStartSize' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='1' name='anEndSize' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='2' name='aDuration' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='aDelay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelay:'>
<arg index='0' name='delay' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDuration:'>
<arg index='0' name='duration' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndValue:'>
<arg index='0' name='endValue' declared_type='NSValue*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartValue:'>
<arg index='0' name='startValue' declared_type='NSValue*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startOffset'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='startValue'>
<retval declared_type='NSValue*' type='@'/>
</method>
<method selector='tweenedValueForProgress:'>
<arg index='0' name='progress' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='NSValue*' type='@'/>
</method>
</class>
<class name='CPTAnnotation'>
<method selector='annotationHostLayer'>
<retval declared_type='CPTAnnotationHostLayer*' type='@'/>
</method>
<method selector='contentAnchorPoint'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='contentLayer'>
<retval declared_type='CPTLayer*' type='@'/>
</method>
<method selector='displacement'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='positionContentLayer'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotation'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='setAnnotationHostLayer:'>
<arg index='0' name='annotationHostLayer' declared_type='CPTAnnotationHostLayer*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentAnchorPoint:'>
<arg index='0' name='contentAnchorPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentLayer:'>
<arg index='0' name='contentLayer' declared_type='CPTLayer*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplacement:'>
<arg index='0' name='displacement' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg index='0' name='rotation' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTAnnotationHostLayer'>
<method selector='addAnnotation:'>
<arg index='0' name='annotation' declared_type='CPTAnnotation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='annotations'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeAllAnnotations'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeAnnotation:'>
<arg index='0' name='annotation' declared_type='CPTAnnotation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTAxis'>
<method selector='addBackgroundLimitBand:'>
<arg index='0' name='limitBand' declared_type='CPTLimitBand*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='alternatingBandFills'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='axisLabels'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='axisLineCapMax'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method selector='axisLineCapMin'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method selector='axisLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='axisSet'>
<retval declared_type='CPTAxisSet*' type='@'/>
</method>
<method selector='axisTitle'>
<retval declared_type='CPTAxisTitle*' type='@'/>
</method>
<method selector='backgroundLimitBands'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='coordinate'>
<retval declared_type='CPTCoordinate' type='i'/>
</method>
<method selector='defaultTitleLocation'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='drawBackgroundBandsInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawBackgroundLimitsInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='drawGridLinesInContext:isMajor:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg index='1' name='major' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='filteredMajorTickLocations:'>
<arg index='0' name='allLocations' declared_type='NSSet*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='filteredMinorTickLocations:'>
<arg index='0' name='allLocations' declared_type='NSSet*' type='@'/>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='gridLinesRange'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='labelAlignment'>
<retval declared_type='CPTAlignment' type='i'/>
</method>
<method selector='labelExclusionRanges'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='labelFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='labelOffset'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='labelRotation'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='labelShadow'>
<retval declared_type='CPTShadow*' type='@'/>
</method>
<method selector='labelTextStyle'>
<retval declared_type='CPTTextStyle*' type='@'/>
</method>
<method selector='labelingOrigin'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='labelingPolicy'>
<retval declared_type='CPTAxisLabelingPolicy' type='i'/>
</method>
<method selector='majorGridLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='majorGridLines'>
<retval declared_type='CPTGridLines*' type='@'/>
</method>
<method selector='majorIntervalLength'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='majorTickLength'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='majorTickLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='majorTickLocations'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='minorGridLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='minorGridLines'>
<retval declared_type='CPTGridLines*' type='@'/>
</method>
<method selector='minorTickAxisLabels'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='minorTickLabelAlignment'>
<retval declared_type='CPTAlignment' type='i'/>
</method>
<method selector='minorTickLabelDirection'>
<retval declared_type='CPTSign' type='i'/>
</method>
<method selector='minorTickLabelFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='minorTickLabelOffset'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='minorTickLabelRotation'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='minorTickLabelShadow'>
<retval declared_type='CPTShadow*' type='@'/>
</method>
<method selector='minorTickLabelTextStyle'>
<retval declared_type='CPTTextStyle*' type='@'/>
</method>
<method selector='minorTickLength'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='minorTickLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='minorTickLocations'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='minorTicksPerInterval'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='needsRelabel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotArea'>
<retval declared_type='CPTPlotArea*' type='@'/>
</method>
<method selector='plotSpace'>
<retval declared_type='CPTPlotSpace*' type='@'/>
</method>
<method selector='preferredNumberOfMajorTicks'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='relabel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeBackgroundLimitBand:'>
<arg index='0' name='limitBand' declared_type='CPTLimitBand*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='separateLayers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAlternatingBandFills:'>
<arg index='0' name='alternatingBandFills' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg index='0' name='attributedTitle' declared_type='NSAttributedString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisLabels:'>
<arg index='0' name='axisLabels' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisLineCapMax:'>
<arg index='0' name='axisLineCapMax' declared_type='CPTLineCap*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisLineCapMin:'>
<arg index='0' name='axisLineCapMin' declared_type='CPTLineCap*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisLineStyle:'>
<arg index='0' name='axisLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisTitle:'>
<arg index='0' name='axisTitle' declared_type='CPTAxisTitle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCoordinate:'>
<arg index='0' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGridLinesRange:'>
<arg index='0' name='gridLinesRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelAlignment:'>
<arg index='0' name='labelAlignment' declared_type='CPTAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelExclusionRanges:'>
<arg index='0' name='labelExclusionRanges' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelFormatter:'>
<arg index='0' name='labelFormatter' declared_type='NSFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelOffset:'>
<arg index='0' name='labelOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelRotation:'>
<arg index='0' name='labelRotation' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelShadow:'>
<arg index='0' name='labelShadow' declared_type='CPTShadow*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelTextStyle:'>
<arg index='0' name='labelTextStyle' declared_type='CPTTextStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelingOrigin:'>
<arg index='0' name='labelingOrigin' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelingPolicy:'>
<arg index='0' name='labelingPolicy' declared_type='CPTAxisLabelingPolicy' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMajorGridLineStyle:'>
<arg index='0' name='majorGridLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMajorIntervalLength:'>
<arg index='0' name='majorIntervalLength' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMajorTickLength:'>
<arg index='0' name='majorTickLength' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMajorTickLineStyle:'>
<arg index='0' name='majorTickLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMajorTickLocations:'>
<arg index='0' name='majorTickLocations' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorGridLineStyle:'>
<arg index='0' name='minorGridLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickAxisLabels:'>
<arg index='0' name='minorTickAxisLabels' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickLabelAlignment:'>
<arg index='0' name='minorTickLabelAlignment' declared_type='CPTAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickLabelDirection:'>
<arg index='0' name='minorTickLabelDirection' declared_type='CPTSign' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickLabelFormatter:'>
<arg index='0' name='minorTickLabelFormatter' declared_type='NSFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickLabelOffset:'>
<arg index='0' name='minorTickLabelOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickLabelRotation:'>
<arg index='0' name='minorTickLabelRotation' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickLabelShadow:'>
<arg index='0' name='minorTickLabelShadow' declared_type='CPTShadow*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickLabelTextStyle:'>
<arg index='0' name='minorTickLabelTextStyle' declared_type='CPTTextStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickLength:'>
<arg index='0' name='minorTickLength' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickLineStyle:'>
<arg index='0' name='minorTickLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTickLocations:'>
<arg index='0' name='minorTickLocations' declared_type='NSSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorTicksPerInterval:'>
<arg index='0' name='minorTicksPerInterval' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsRelabel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotArea:'>
<arg index='0' name='plotArea' declared_type='CPTPlotArea*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotSpace:'>
<arg index='0' name='plotSpace' declared_type='CPTPlotSpace*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredNumberOfMajorTicks:'>
<arg index='0' name='preferredNumberOfMajorTicks' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparateLayers:'>
<arg index='0' name='separateLayers' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTickDirection:'>
<arg index='0' name='tickDirection' declared_type='CPTSign' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTickLabelDirection:'>
<arg index='0' name='tickLabelDirection' declared_type='CPTSign' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg index='0' name='title' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleLocation:'>
<arg index='0' name='titleLocation' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleOffset:'>
<arg index='0' name='titleOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleRotation:'>
<arg index='0' name='titleRotation' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleTextStyle:'>
<arg index='0' name='titleTextStyle' declared_type='CPTTextStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisibleAxisRange:'>
<arg index='0' name='visibleAxisRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisibleRange:'>
<arg index='0' name='visibleRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tickDirection'>
<retval declared_type='CPTSign' type='i'/>
</method>
<method selector='tickLabelDirection'>
<retval declared_type='CPTSign' type='i'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleLocation'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='titleOffset'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='titleRotation'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='titleTextStyle'>
<retval declared_type='CPTTextStyle*' type='@'/>
</method>
<method selector='updateAxisTitle'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateMajorTickLabels'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateMinorTickLabels'>
<retval declared_type='void' type='v'/>
</method>
<method selector='viewPointForCoordinateDecimalNumber:'>
<arg index='0' name='coordinateDecimalNumber' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='visibleAxisRange'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='visibleRange'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
</class>
<class name='CPTAxisLabel'>
<method selector='alignment'>
<retval declared_type='CPTAlignment' type='i'/>
</method>
<method selector='contentLayer'>
<retval declared_type='CPTLayer*' type='@'/>
</method>
<method selector='initWithContentLayer:'>
<arg index='0' name='layer' declared_type='CPTLayer*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithText:textStyle:'>
<arg index='0' name='newText' declared_type='NSString*' type='@'/>
<arg index='1' name='style' declared_type='CPTTextStyle*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='offset'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='positionBetweenViewPoint:andViewPoint:forCoordinate:inDirection:'>
<arg index='0' name='firstPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='1' name='secondPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='2' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<arg index='3' name='direction' declared_type='CPTSign' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='positionRelativeToViewPoint:forCoordinate:inDirection:'>
<arg index='0' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='1' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<arg index='2' name='direction' declared_type='CPTSign' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rotation'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='setAlignment:'>
<arg index='0' name='alignment' declared_type='CPTAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentLayer:'>
<arg index='0' name='contentLayer' declared_type='CPTLayer*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffset:'>
<arg index='0' name='offset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRotation:'>
<arg index='0' name='rotation' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTickLocation:'>
<arg index='0' name='tickLocation' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tickLocation'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
</class>
<class name='CPTAxisSet'>
<method selector='axes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='axisForCoordinate:atIndex:'>
<arg index='0' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTAxis*' type='@'/>
</method>
<method selector='borderLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='relabelAxes'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxes:'>
<arg index='0' name='axes' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderLineStyle:'>
<arg index='0' name='borderLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTBarPlot'>
<method selector='barBaseCornerRadius'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='barBasesVary'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='barCornerRadius'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='barOffset'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='barOffsetScale'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='barWidth'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='barWidthScale'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='barWidthsAreInViewCoordinates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='barsAreHorizontal'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='baseValue'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='fill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='lineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='plotRange'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='plotRangeEnclosingBars'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='setBarBaseCornerRadius:'>
<arg index='0' name='barBaseCornerRadius' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarBasesVary:'>
<arg index='0' name='barBasesVary' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarCornerRadius:'>
<arg index='0' name='barCornerRadius' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarOffset:'>
<arg index='0' name='barOffset' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarOffsetScale:'>
<arg index='0' name='barOffsetScale' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarWidth:'>
<arg index='0' name='barWidth' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarWidthScale:'>
<arg index='0' name='barWidthScale' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarWidthsAreInViewCoordinates:'>
<arg index='0' name='barWidthsAreInViewCoordinates' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarsAreHorizontal:'>
<arg index='0' name='barsAreHorizontal' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBaseValue:'>
<arg index='0' name='baseValue' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill:'>
<arg index='0' name='fill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineStyle:'>
<arg index='0' name='lineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotRange:'>
<arg index='0' name='plotRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='tubularBarPlotWithColor:horizontalBars:'>
<arg index='0' name='color' declared_type='CPTColor*' type='@'/>
<arg index='1' name='horizontal' declared_type='BOOL' type='B'/>
<retval declared_type='CPTBarPlot*' type='@'/>
</method>
</class>
<class name='CPTBorderLayer'>
<method selector='maskedLayer'>
<retval declared_type='CPTBorderedLayer*' type='@'/>
</method>
<method selector='setMaskedLayer:'>
<arg index='0' name='maskedLayer' declared_type='CPTBorderedLayer*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTBorderedLayer'>
<method selector='borderLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='fill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='inLayout'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='renderBorderedLayerAsVectorInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderLineStyle:'>
<arg index='0' name='borderLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill:'>
<arg index='0' name='fill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInLayout:'>
<arg index='0' name='inLayout' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTCalendarFormatter'>
<method selector='dateFormatter'>
<retval declared_type='NSDateFormatter*' type='@'/>
</method>
<method selector='initWithDateFormatter:'>
<arg index='0' name='aDateFormatter' declared_type='NSDateFormatter*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='referenceCalendar'>
<retval declared_type='NSCalendar*' type='@'/>
</method>
<method selector='referenceCalendarUnit'>
<retval type64='Q' declared_type='NSCalendarUnit' type='I'/>
</method>
<method selector='referenceDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='setDateFormatter:'>
<arg index='0' name='dateFormatter' declared_type='NSDateFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReferenceCalendar:'>
<arg index='0' name='referenceCalendar' declared_type='NSCalendar*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReferenceCalendarUnit:'>
<arg index='0' name='referenceCalendarUnit' type64='Q' declared_type='NSCalendarUnit' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReferenceDate:'>
<arg index='0' name='referenceDate' declared_type='NSDate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTColor'>
<method class_method='true' selector='blackColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='blueColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='brownColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='cgColor'>
<retval declared_type='CGColorRef' type='^{CGColor=}'/>
</method>
<method class_method='true' selector='clearColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='colorWithAlphaComponent:'>
<arg index='0' name='alpha' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithCGColor:'>
<arg index='0' name='newCGColor' declared_type='CGColorRef' type='^{CGColor=}'/>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithComponentRed:green:blue:alpha:'>
<arg index='0' name='red' type64='d' declared_type='CGFloat' type='f'/>
<arg index='1' name='green' type64='d' declared_type='CGFloat' type='f'/>
<arg index='2' name='blue' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='alpha' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithGenericGray:'>
<arg index='0' name='gray' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='cyanColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='darkGrayColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='grayColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='greenColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='initWithCGColor:'>
<arg index='0' name='cgColor' declared_type='CGColorRef' type='^{CGColor=}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithComponentRed:green:blue:alpha:'>
<arg index='0' name='red' type64='d' declared_type='CGFloat' type='f'/>
<arg index='1' name='green' type64='d' declared_type='CGFloat' type='f'/>
<arg index='2' name='blue' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='alpha' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='lightGrayColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='magentaColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='orangeColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='purpleColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='redColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='uiColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='whiteColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method class_method='true' selector='yellowColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
</class>
<class name='CPTColorSpace'>
<method selector='cgColorSpace'>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method class_method='true' selector='genericRGBSpace'>
<retval declared_type='CPTColorSpace*' type='@'/>
</method>
<method selector='initWithCGColorSpace:'>
<arg index='0' name='colorSpace' declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CPTConstraints'>
<method class_method='true' selector='constraintWithLowerOffset:'>
<arg index='0' name='newOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTConstraints*' type='@'/>
</method>
<method class_method='true' selector='constraintWithRelativeOffset:'>
<arg index='0' name='newOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTConstraints*' type='@'/>
</method>
<method class_method='true' selector='constraintWithUpperOffset:'>
<arg index='0' name='newOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTConstraints*' type='@'/>
</method>
<method selector='initWithLowerOffset:'>
<arg index='0' name='newOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithRelativeOffset:'>
<arg index='0' name='newOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUpperOffset:'>
<arg index='0' name='newOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToConstraint:'>
<arg index='0' name='otherConstraint' declared_type='CPTConstraints*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='positionForLowerBound:upperBound:'>
<arg index='0' name='lowerBound' type64='d' declared_type='CGFloat' type='f'/>
<arg index='1' name='upperBound' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='CPTFill'>
<method selector='fillPathInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillRect:inContext:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='fillWithColor:'>
<arg index='0' name='aColor' declared_type='CPTColor*' type='@'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method class_method='true' selector='fillWithGradient:'>
<arg index='0' name='aGradient' declared_type='CPTGradient*' type='@'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method class_method='true' selector='fillWithImage:'>
<arg index='0' name='anImage' declared_type='CPTImage*' type='@'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='initWithColor:'>
<arg index='0' name='aColor' declared_type='CPTColor*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithGradient:'>
<arg index='0' name='aGradient' declared_type='CPTGradient*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithImage:'>
<arg index='0' name='anImage' declared_type='CPTImage*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CPTFunctionDataSource'>
<method selector='dataPlot'>
<retval declared_type='CPTPlot*' type='@'/>
</method>
<method selector='dataRange'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method class_method='true' selector='dataSourceForPlot:withFunction:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg function_pointer='true' index='1' name='function' declared_type='CPTDataSourceFunction' type='^?'>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='dataSourceFunction'>
<retval function_pointer='true' declared_type='CPTDataSourceFunction' type='^?'>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</retval>
</method>
<method selector='initForPlot:withFunction:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg function_pointer='true' index='1' name='function' declared_type='CPTDataSourceFunction' type='^?'>
<arg declared_type='double' type='d'/>
<retval declared_type='double' type='d'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='resolution'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='setDataRange:'>
<arg index='0' name='dataRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResolution:'>
<arg index='0' name='resolution' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTGradient'>
<method selector='addColorStop:atPosition:'>
<arg index='0' name='color' declared_type='CPTColor*' type='@'/>
<arg index='1' name='position' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method selector='angle'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='aquaNormalGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method class_method='true' selector='aquaPressedGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method class_method='true' selector='aquaSelectedGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method selector='blendingMode'>
<retval declared_type='CPTGradientBlendingMode' type='i'/>
</method>
<method selector='drawSwatchInRect:inContext:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='endAnchor'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='fillPathInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillRect:inContext:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='gradientType'>
<retval declared_type='CPTGradientType' type='i'/>
</method>
<method selector='gradientWithAlphaComponent:'>
<arg index='0' name='alpha' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method class_method='true' selector='gradientWithBeginningColor:endingColor:'>
<arg index='0' name='begin' declared_type='CPTColor*' type='@'/>
<arg index='1' name='end' declared_type='CPTColor*' type='@'/>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method class_method='true' selector='gradientWithBeginningColor:endingColor:beginningPosition:endingPosition:'>
<arg index='0' name='begin' declared_type='CPTColor*' type='@'/>
<arg index='1' name='end' declared_type='CPTColor*' type='@'/>
<arg index='2' name='beginningPosition' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='endingPosition' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method selector='gradientWithBlendingMode:'>
<arg index='0' name='mode' declared_type='CPTGradientBlendingMode' type='i'/>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method class_method='true' selector='hydrogenSpectrumGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='newColorAtPosition:'>
<arg index='0' name='position' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CGColorRef' type='^{CGColor=}'/>
</method>
<method selector='newColorStopAtIndex:'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CGColorRef' type='^{CGColor=}'/>
</method>
<method class_method='true' selector='rainbowGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method selector='removeColorStopAtIndex:'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method selector='removeColorStopAtPosition:'>
<arg index='0' name='position' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method selector='setAngle:'>
<arg index='0' name='angle' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndAnchor:'>
<arg index='0' name='endAnchor' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGradientType:'>
<arg index='0' name='gradientType' declared_type='CPTGradientType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartAnchor:'>
<arg index='0' name='startAnchor' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sourceListSelectedGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method class_method='true' selector='sourceListUnselectedGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method selector='startAnchor'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method class_method='true' selector='unifiedDarkGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method class_method='true' selector='unifiedNormalGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method class_method='true' selector='unifiedPressedGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method class_method='true' selector='unifiedSelectedGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
</class>
<class name='CPTGraph'>
<method selector='addPlot:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPlot:toPlotSpace:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='space' declared_type='CPTPlotSpace*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addPlotSpace:'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allPlotSpaces'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='allPlots'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='applyTheme:'>
<arg index='0' name='theme' declared_type='CPTTheme*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='axisSet'>
<retval declared_type='CPTAxisSet*' type='@'/>
</method>
<method selector='defaultPlotSpace'>
<retval declared_type='CPTPlotSpace*' type='@'/>
</method>
<method selector='hostingView'>
<retval declared_type='CPTGraphHostingView*' type='@'/>
</method>
<method selector='insertPlot:atIndex:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertPlot:atIndex:intoPlotSpace:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='space' declared_type='CPTPlotSpace*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='legend'>
<retval declared_type='CPTLegend*' type='@'/>
</method>
<method selector='legendAnchor'>
<retval declared_type='CPTRectAnchor' type='i'/>
</method>
<method selector='legendDisplacement'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='newAxisSet'>
<retval declared_type='CPTAxisSet*' type='@'/>
</method>
<method selector='newPlotSpace'>
<retval declared_type='CPTPlotSpace*' type='@'/>
</method>
<method selector='plotAreaFrame'>
<retval declared_type='CPTPlotAreaFrame*' type='@'/>
</method>
<method selector='plotAtIndex:'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTPlot*' type='@'/>
</method>
<method selector='plotSpaceAtIndex:'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTPlotSpace*' type='@'/>
</method>
<method selector='plotSpaceWithIdentifier:'>
<arg index='0' name='identifier' declared_type='id' type='@'/>
<retval declared_type='CPTPlotSpace*' type='@'/>
</method>
<method selector='plotWithIdentifier:'>
<arg index='0' name='identifier' declared_type='id' type='@'/>
<retval declared_type='CPTPlot*' type='@'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadDataIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removePlot:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removePlotSpace:'>
<arg index='0' name='plotSpace' declared_type='CPTPlotSpace*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removePlotWithIdentifier:'>
<arg index='0' name='identifier' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg index='0' name='attributedTitle' declared_type='NSAttributedString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisSet:'>
<arg index='0' name='axisSet' declared_type='CPTAxisSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHostingView:'>
<arg index='0' name='hostingView' declared_type='CPTGraphHostingView*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLegend:'>
<arg index='0' name='legend' declared_type='CPTLegend*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLegendAnchor:'>
<arg index='0' name='legendAnchor' declared_type='CPTRectAnchor' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLegendDisplacement:'>
<arg index='0' name='legendDisplacement' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotAreaFrame:'>
<arg index='0' name='plotAreaFrame' declared_type='CPTPlotAreaFrame*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg index='0' name='title' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleDisplacement:'>
<arg index='0' name='titleDisplacement' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitlePlotAreaFrameAnchor:'>
<arg index='0' name='titlePlotAreaFrameAnchor' declared_type='CPTRectAnchor' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleTextStyle:'>
<arg index='0' name='titleTextStyle' declared_type='CPTTextStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopDownLayerOrder:'>
<arg index='0' name='topDownLayerOrder' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleDisplacement'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='titlePlotAreaFrameAnchor'>
<retval declared_type='CPTRectAnchor' type='i'/>
</method>
<method selector='titleTextStyle'>
<retval declared_type='CPTTextStyle*' type='@'/>
</method>
<method selector='topDownLayerOrder'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='CPTGraphHostingView'>
<method selector='allowPinchScaling'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='collapsesLayers'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hostedGraph'>
<retval declared_type='CPTGraph*' type='@'/>
</method>
<method selector='setAllowPinchScaling:'>
<arg index='0' name='allowPinchScaling' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCollapsesLayers:'>
<arg index='0' name='collapsesLayers' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHostedGraph:'>
<arg index='0' name='hostedGraph' declared_type='CPTGraph*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTGridLineGroup'>
<method selector='major'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotArea'>
<retval declared_type='CPTPlotArea*' type='@'/>
</method>
<method selector='setMajor:'>
<arg index='0' name='major' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotArea:'>
<arg index='0' name='plotArea' declared_type='CPTPlotArea*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTGridLines'>
<method selector='axis'>
<retval declared_type='CPTAxis*' type='@'/>
</method>
<method selector='major'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAxis:'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMajor:'>
<arg index='0' name='major' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTImage'>
<method selector='drawInRect:inContext:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='image'>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
<method class_method='true' selector='imageForPNGFile:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<retval declared_type='CPTImage*' type='@'/>
</method>
<method class_method='true' selector='imageWithCGImage:'>
<arg index='0' name='anImage' declared_type='CGImageRef' type='^{CGImage=}'/>
<retval declared_type='CPTImage*' type='@'/>
</method>
<method class_method='true' selector='imageWithCGImage:scale:'>
<arg index='0' name='anImage' declared_type='CGImageRef' type='^{CGImage=}'/>
<arg index='1' name='newScale' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='CPTImage*' type='@'/>
</method>
<method selector='initForPNGFile:'>
<arg index='0' name='path' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCGImage:'>
<arg index='0' name='anImage' declared_type='CGImageRef' type='^{CGImage=}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCGImage:scale:'>
<arg index='0' name='anImage' declared_type='CGImageRef' type='^{CGImage=}'/>
<arg index='1' name='newScale' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTiled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='scale'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='setImage:'>
<arg index='0' name='image' declared_type='CGImageRef' type='^{CGImage=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScale:'>
<arg index='0' name='scale' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTileAnchoredToContext:'>
<arg index='0' name='tileAnchoredToContext' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTiled:'>
<arg index='0' name='tiled' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tileAnchoredToContext'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CPTLayer'>
<method selector='applyMaskToContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applySublayerMaskToContext:forSublayer:withOffset:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg index='1' name='sublayer' declared_type='CPTLayer*' type='@'/>
<arg index='2' name='offset' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='contentsScale'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='dataForPDFRepresentationOfLayer'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='graph'>
<retval declared_type='CPTGraph*' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageOfLayer'>
<retval type64='^{UIImage=#^vd{?=b1b3b1b1b1b16b2}}' declared_type='UIImage*' type='^{UIImage=#^vf{?=b1b3b1b1b1b16b2}}'/>
</method>
<method selector='initWithFrame:'>
<arg index='0' name='newFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='innerBorderPath'>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='layoutAndRenderInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='logLayers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='maskingPath'>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='masksToBorder'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outerBorderPath'>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='paddingBottom'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='paddingLeft'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='paddingRight'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='paddingTop'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='pixelAlign'>
<retval declared_type='void' type='v'/>
</method>
<method selector='recursivelyRenderInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderAsVectorInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentsScale:'>
<arg index='0' name='contentsScale' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGraph:'>
<arg index='0' name='graph' declared_type='CPTGraph*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentifier:'>
<arg index='0' name='identifier' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInnerBorderPath:'>
<arg index='0' name='innerBorderPath' declared_type='CGPathRef' type='^{CGPath=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMasksToBorder:'>
<arg index='0' name='masksToBorder' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOuterBorderPath:'>
<arg index='0' name='outerBorderPath' declared_type='CGPathRef' type='^{CGPath=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaddingBottom:'>
<arg index='0' name='paddingBottom' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaddingLeft:'>
<arg index='0' name='paddingLeft' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaddingRight:'>
<arg index='0' name='paddingRight' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPaddingTop:'>
<arg index='0' name='paddingTop' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadow:'>
<arg index='0' name='shadow' declared_type='CPTShadow*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadow'>
<retval declared_type='CPTShadow*' type='@'/>
</method>
<method selector='shadowMargin'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='sublayerMarginLeft:top:right:bottom:'>
<arg index='0' name='left' type64='^d' declared_type='CGFloat*' type='^f'/>
<arg index='1' name='top' type64='^d' declared_type='CGFloat*' type='^f'/>
<arg index='2' name='right' type64='^d' declared_type='CGFloat*' type='^f'/>
<arg index='3' name='bottom' type64='^d' declared_type='CGFloat*' type='^f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sublayerMaskingPath'>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='sublayersExcludedFromAutomaticLayout'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='useFastRendering'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CPTLayerAnnotation'>
<method selector='anchorLayer'>
<retval declared_type='CPTLayer*' type='@'/>
</method>
<method selector='initWithAnchorLayer:'>
<arg index='0' name='anchorLayer' declared_type='CPTLayer*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='rectAnchor'>
<retval declared_type='CPTRectAnchor' type='i'/>
</method>
<method selector='setRectAnchor:'>
<arg index='0' name='rectAnchor' declared_type='CPTRectAnchor' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTLegend'>
<method selector='addPlot:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allPlots'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='columnMargin'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='columnWidths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='columnWidthsThatFit'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='equalColumns'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='equalRows'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithGraph:'>
<arg index='0' name='graph' declared_type='CPTGraph*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPlots:'>
<arg index='0' name='newPlots' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='insertPlot:atIndex:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='layoutChanged'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='legendWithGraph:'>
<arg index='0' name='graph' declared_type='CPTGraph*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='legendWithPlots:'>
<arg index='0' name='newPlots' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='numberOfColumns'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='numberOfRows'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='plotAtIndex:'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTPlot*' type='@'/>
</method>
<method selector='plotWithIdentifier:'>
<arg index='0' name='identifier' declared_type='id' type='@'/>
<retval declared_type='CPTPlot*' type='@'/>
</method>
<method selector='removePlot:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removePlotWithIdentifier:'>
<arg index='0' name='identifier' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rowHeights'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='rowHeightsThatFit'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='rowMargin'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='setColumnMargin:'>
<arg index='0' name='columnMargin' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColumnWidths:'>
<arg index='0' name='columnWidths' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEqualColumns:'>
<arg index='0' name='equalColumns' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEqualRows:'>
<arg index='0' name='equalRows' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLayoutChanged'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfColumns:'>
<arg index='0' name='numberOfColumns' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfRows:'>
<arg index='0' name='numberOfRows' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowHeights:'>
<arg index='0' name='rowHeights' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRowMargin:'>
<arg index='0' name='rowMargin' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSwatchBorderLineStyle:'>
<arg index='0' name='swatchBorderLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSwatchCornerRadius:'>
<arg index='0' name='swatchCornerRadius' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSwatchFill:'>
<arg index='0' name='swatchFill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSwatchSize:'>
<arg index='0' name='swatchSize' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextStyle:'>
<arg index='0' name='textStyle' declared_type='CPTTextStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleOffset:'>
<arg index='0' name='titleOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='swatchBorderLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='swatchCornerRadius'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='swatchFill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='swatchSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='textStyle'>
<retval declared_type='CPTTextStyle*' type='@'/>
</method>
<method selector='titleOffset'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='CPTLegendEntry'>
<method selector='column'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='drawTitleInRect:inContext:scale:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg index='2' name='scale' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='index'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='plot'>
<retval declared_type='CPTPlot*' type='@'/>
</method>
<method selector='row'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='setColumn:'>
<arg index='0' name='column' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIndex:'>
<arg index='0' name='index' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlot:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRow:'>
<arg index='0' name='row' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextStyle:'>
<arg index='0' name='textStyle' declared_type='CPTTextStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textStyle'>
<retval declared_type='CPTTextStyle*' type='@'/>
</method>
<method selector='titleSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='CPTLimitBand'>
<method selector='fill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='initWithRange:fill:'>
<arg index='0' name='newRange' declared_type='CPTPlotRange*' type='@'/>
<arg index='1' name='newFill' declared_type='CPTFill*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='limitBandWithRange:fill:'>
<arg index='0' name='newRange' declared_type='CPTPlotRange*' type='@'/>
<arg index='1' name='newFill' declared_type='CPTFill*' type='@'/>
<retval declared_type='CPTLimitBand*' type='@'/>
</method>
<method selector='range'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='setFill:'>
<arg index='0' name='fill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRange:'>
<arg index='0' name='range' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTLineCap'>
<method class_method='true' selector='barPlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method class_method='true' selector='crossPlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method selector='customLineCapPath'>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method class_method='true' selector='customLineCapWithPath:'>
<arg index='0' name='aPath' declared_type='CGPathRef' type='^{CGPath=}'/>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method class_method='true' selector='diamondPlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method class_method='true' selector='ellipsePlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method selector='fill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method class_method='true' selector='hexagonPlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method class_method='true' selector='lineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method selector='lineCapType'>
<retval declared_type='CPTLineCapType' type='i'/>
</method>
<method selector='lineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method class_method='true' selector='openArrowPlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method class_method='true' selector='pentagonPlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method class_method='true' selector='rectanglePlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method selector='renderAsVectorInContext:atPoint:inDirection:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg index='1' name='center' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='2' name='direction' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomLineCapPath:'>
<arg index='0' name='customLineCapPath' declared_type='CGPathRef' type='^{CGPath=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill:'>
<arg index='0' name='fill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineCapType:'>
<arg index='0' name='lineCapType' declared_type='CPTLineCapType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineStyle:'>
<arg index='0' name='lineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg index='0' name='size' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesEvenOddClipRule:'>
<arg index='0' name='usesEvenOddClipRule' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method class_method='true' selector='snowPlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method class_method='true' selector='solidArrowPlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method class_method='true' selector='sweptArrowPlotLineCap'>
<retval declared_type='CPTLineCap*' type='@'/>
</method>
<method selector='usesEvenOddClipRule'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CPTLineStyle'>
<method selector='dashPattern'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lineCap'>
<retval declared_type='CGLineCap' type='i'/>
</method>
<method selector='lineColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='lineFill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='lineGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method selector='lineJoin'>
<retval declared_type='CGLineJoin' type='i'/>
</method>
<method class_method='true' selector='lineStyle'>
<retval declared_type='id' type='@'/>
</method>
<method selector='lineWidth'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='miterLimit'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='patternPhase'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='setLineStyleInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokePathInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokeRect:inContext:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTMutableLineStyle'>
<method selector='dashPattern'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='lineCap'>
<retval declared_type='CGLineCap' type='i'/>
</method>
<method selector='lineColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='lineFill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='lineGradient'>
<retval declared_type='CPTGradient*' type='@'/>
</method>
<method selector='lineJoin'>
<retval declared_type='CGLineJoin' type='i'/>
</method>
<method selector='lineWidth'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='miterLimit'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='patternPhase'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='setDashPattern:'>
<arg index='0' name='dashPattern' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineCap:'>
<arg index='0' name='lineCap' declared_type='CGLineCap' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineColor:'>
<arg index='0' name='lineColor' declared_type='CPTColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineFill:'>
<arg index='0' name='lineFill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineGradient:'>
<arg index='0' name='lineGradient' declared_type='CPTGradient*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineJoin:'>
<arg index='0' name='lineJoin' declared_type='CGLineJoin' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineWidth:'>
<arg index='0' name='lineWidth' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiterLimit:'>
<arg index='0' name='miterLimit' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPatternPhase:'>
<arg index='0' name='patternPhase' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTMutableNumericData'>
<method selector='byteOrder'>
<retval type64='q' declared_type='CFByteOrder' type='l'/>
</method>
<method selector='convertToType:sampleBytes:byteOrder:'>
<arg index='0' name='newDataType' declared_type='CPTDataTypeFormat' type='i'/>
<arg index='1' name='newSampleBytes' type64='Q' declared_type='size_t' type='L'/>
<arg index='2' name='newByteOrder' type64='q' declared_type='CFByteOrder' type='l'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dataType'>
<retval type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
</method>
<method selector='dataTypeFormat'>
<retval declared_type='CPTDataTypeFormat' type='i'/>
</method>
<method selector='mutableBytes'>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='sampleBytes'>
<retval type64='Q' declared_type='size_t' type='L'/>
</method>
<method selector='setByteOrder:'>
<arg index='0' name='byteOrder' type64='q' declared_type='CFByteOrder' type='l'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataType:'>
<arg index='0' name='dataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTypeFormat:'>
<arg index='0' name='dataTypeFormat' declared_type='CPTDataTypeFormat' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSampleBytes:'>
<arg index='0' name='sampleBytes' type64='Q' declared_type='size_t' type='L'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShape:'>
<arg index='0' name='shape' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shape'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='CPTMutablePlotRange'>
<method selector='expandRangeByFactor:'>
<arg index='0' name='factor' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='intersectionPlotRange:'>
<arg index='0' name='otherRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='length'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='location'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='setLength:'>
<arg index='0' name='length' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocation:'>
<arg index='0' name='location' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftEndToFitInRange:'>
<arg index='0' name='otherRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shiftLocationToFitInRange:'>
<arg index='0' name='otherRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unionPlotRange:'>
<arg index='0' name='otherRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTMutableShadow'>
<method selector='setShadowBlurRadius:'>
<arg index='0' name='shadowBlurRadius' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowColor:'>
<arg index='0' name='shadowColor' declared_type='CPTColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowOffset:'>
<arg index='0' name='shadowOffset' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowBlurRadius'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='shadowColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='shadowOffset'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='CPTMutableTextStyle'>
<method selector='color'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontSize'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='lineBreakMode'>
<retval type64='q' declared_type='NSLineBreakMode' type='i'/>
</method>
<method selector='setColor:'>
<arg index='0' name='color' declared_type='CPTColor*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontName:'>
<arg index='0' name='fontName' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFontSize:'>
<arg index='0' name='fontSize' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineBreakMode:'>
<arg index='0' name='lineBreakMode' type64='q' declared_type='NSLineBreakMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAlignment:'>
<arg index='0' name='textAlignment' declared_type='CPTTextAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='textAlignment'>
<retval declared_type='CPTTextAlignment' type='i'/>
</method>
</class>
<class name='CPTNumericData'>
<method selector='byteOrder'>
<retval type64='q' declared_type='CFByteOrder' type='l'/>
</method>
<method selector='bytes'>
<retval const='true' declared_type='void*' type='^v'/>
</method>
<method selector='convertData:dataType:toData:dataType:'>
<arg index='0' name='sourceData' declared_type='NSData*' type='@'/>
<arg index='1' name='sourceDataType' type64='^{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType*' type='^{_CPTNumericDataType=iIi}'/>
<arg index='2' name='destData' declared_type='NSMutableData*' type='@'/>
<arg index='3' name='destDataType' type64='^{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType*' type='^{_CPTNumericDataType=iIi}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataByConvertingToDataType:'>
<arg index='0' name='newDataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<retval declared_type='CPTNumericData*' type='@'/>
</method>
<method selector='dataByConvertingToType:sampleBytes:byteOrder:'>
<arg index='0' name='newDataType' declared_type='CPTDataTypeFormat' type='i'/>
<arg index='1' name='newSampleBytes' type64='Q' declared_type='size_t' type='L'/>
<arg index='2' name='newByteOrder' type64='q' declared_type='CFByteOrder' type='l'/>
<retval declared_type='CPTNumericData*' type='@'/>
</method>
<method selector='dataOrder'>
<retval declared_type='CPTDataOrder' type='i'/>
</method>
<method selector='dataType'>
<retval type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
</method>
<method selector='dataTypeFormat'>
<retval declared_type='CPTDataTypeFormat' type='i'/>
</method>
<method selector='initWithArray:dataType:shape:'>
<arg index='0' name='newData' declared_type='NSArray*' type='@'/>
<arg index='1' name='newDataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithArray:dataType:shape:dataOrder:'>
<arg index='0' name='newData' declared_type='NSArray*' type='@'/>
<arg index='1' name='newDataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<arg index='3' name='order' declared_type='CPTDataOrder' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithArray:dataTypeString:shape:'>
<arg index='0' name='newData' declared_type='NSArray*' type='@'/>
<arg index='1' name='newDataTypeString' declared_type='NSString*' type='@'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithArray:dataTypeString:shape:dataOrder:'>
<arg index='0' name='newData' declared_type='NSArray*' type='@'/>
<arg index='1' name='newDataTypeString' declared_type='NSString*' type='@'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<arg index='3' name='order' declared_type='CPTDataOrder' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:dataType:shape:'>
<arg index='0' name='newData' declared_type='NSData*' type='@'/>
<arg index='1' name='newDataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:dataType:shape:dataOrder:'>
<arg index='0' name='newData' declared_type='NSData*' type='@'/>
<arg index='1' name='newDataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<arg index='3' name='order' declared_type='CPTDataOrder' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:dataTypeString:shape:'>
<arg index='0' name='newData' declared_type='NSData*' type='@'/>
<arg index='1' name='newDataTypeString' declared_type='NSString*' type='@'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:dataTypeString:shape:dataOrder:'>
<arg index='0' name='newData' declared_type='NSData*' type='@'/>
<arg index='1' name='newDataTypeString' declared_type='NSString*' type='@'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<arg index='3' name='order' declared_type='CPTDataOrder' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='length'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='numberOfDimensions'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='numberOfSamples'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='numericDataWithArray:dataType:shape:'>
<arg index='0' name='newData' declared_type='NSArray*' type='@'/>
<arg index='1' name='newDataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='numericDataWithArray:dataType:shape:dataOrder:'>
<arg index='0' name='newData' declared_type='NSArray*' type='@'/>
<arg index='1' name='newDataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<arg index='3' name='order' declared_type='CPTDataOrder' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='numericDataWithArray:dataTypeString:shape:'>
<arg index='0' name='newData' declared_type='NSArray*' type='@'/>
<arg index='1' name='newDataTypeString' declared_type='NSString*' type='@'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='numericDataWithArray:dataTypeString:shape:dataOrder:'>
<arg index='0' name='newData' declared_type='NSArray*' type='@'/>
<arg index='1' name='newDataTypeString' declared_type='NSString*' type='@'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<arg index='3' name='order' declared_type='CPTDataOrder' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='numericDataWithData:dataType:shape:'>
<arg index='0' name='newData' declared_type='NSData*' type='@'/>
<arg index='1' name='newDataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='numericDataWithData:dataType:shape:dataOrder:'>
<arg index='0' name='newData' declared_type='NSData*' type='@'/>
<arg index='1' name='newDataType' type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<arg index='3' name='order' declared_type='CPTDataOrder' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='numericDataWithData:dataTypeString:shape:'>
<arg index='0' name='newData' declared_type='NSData*' type='@'/>
<arg index='1' name='newDataTypeString' declared_type='NSString*' type='@'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='numericDataWithData:dataTypeString:shape:dataOrder:'>
<arg index='0' name='newData' declared_type='NSData*' type='@'/>
<arg index='1' name='newDataTypeString' declared_type='NSString*' type='@'/>
<arg index='2' name='shapeArray' declared_type='NSArray*' type='@'/>
<arg index='3' name='order' declared_type='CPTDataOrder' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='sampleArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sampleBytes'>
<retval type64='Q' declared_type='size_t' type='L'/>
</method>
<method selector='sampleIndex:' variadic='true'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='samplePointer:'>
<arg index='0' name='sample' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='samplePointerAtIndex:' variadic='true'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void*' type='^v'/>
</method>
<method selector='sampleValue:'>
<arg index='0' name='sample' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='sampleValueAtIndex:' variadic='true'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='shape'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='swapByteOrderForData:sampleSize:'>
<arg index='0' name='sourceData' declared_type='NSMutableData*' type='@'/>
<arg index='1' name='sampleSize' type64='Q' declared_type='size_t' type='L'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTPieChart'>
<method selector='borderLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='centerAnchor'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method class_method='true' selector='defaultPieSliceColorForIndex:'>
<arg index='0' name='pieSliceIndex' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='endAngle'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='labelRotationRelativeToRadius'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='medianAngleForPieSliceIndex:'>
<arg index='0' name='index' type64='Q' declared_type='NSUInteger' type='I'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='overlayFill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='pieInnerRadius'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='pieRadius'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='pieSliceIndexAtAngle:'>
<arg index='0' name='angle' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='setBorderLineStyle:'>
<arg index='0' name='borderLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCenterAnchor:'>
<arg index='0' name='centerAnchor' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndAngle:'>
<arg index='0' name='endAngle' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelRotationRelativeToRadius:'>
<arg index='0' name='labelRotationRelativeToRadius' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOverlayFill:'>
<arg index='0' name='overlayFill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPieInnerRadius:'>
<arg index='0' name='pieInnerRadius' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPieRadius:'>
<arg index='0' name='pieRadius' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSliceDirection:'>
<arg index='0' name='sliceDirection' declared_type='CPTPieDirection' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartAngle:'>
<arg index='0' name='startAngle' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sliceDirection'>
<retval declared_type='CPTPieDirection' type='i'/>
</method>
<method selector='startAngle'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='CPTPlot'>
<method selector='adjustLabelAnchors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alignsPointsToPixels'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributedTitle'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='attributedTitleForLegendEntryAtIndex:'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='cacheArray:forKey:'>
<arg index='0' name='array' declared_type='NSArray*' type='@'/>
<arg index='1' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cacheArray:forKey:atRecordIndex:'>
<arg index='0' name='array' declared_type='NSArray*' type='@'/>
<arg index='1' name='key' declared_type='NSString*' type='@'/>
<arg index='2' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cacheNumbers:forField:'>
<arg index='0' name='numbers' declared_type='id' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cacheNumbers:forField:atRecordIndex:'>
<arg index='0' name='numbers' declared_type='id' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachePrecision'>
<retval declared_type='CPTPlotCachePrecision' type='i'/>
</method>
<method selector='cachedArrayForKey:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='cachedDataCount'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='cachedDecimalForField:recordIndex:'>
<arg index='0' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='cachedDoubleForField:recordIndex:'>
<arg index='0' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='cachedNumberForField:recordIndex:'>
<arg index='0' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='cachedNumbersForField:'>
<arg index='0' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTMutableNumericData*' type='@'/>
</method>
<method selector='cachedValueForKey:recordIndex:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='dataIndexFromInteractionPoint:'>
<arg index='0' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='dataNeedsReloading'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='decimalDataType'>
<retval type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
</method>
<method selector='deleteDataInIndexRange:'>
<arg index='0' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleDataType'>
<retval type64='{_CPTNumericDataType=iQq}' declared_type='CPTNumericDataType' type='{_CPTNumericDataType=iIi}'/>
</method>
<method selector='doublePrecisionCache'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='drawSwatchForLegend:atIndex:inRect:inContext:'>
<arg index='0' name='legend' declared_type='CPTLegend*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='3' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fieldIdentifiers'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='fieldIdentifiersForCoordinate:'>
<arg index='0' name='coord' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='insertDataAtIndex:numberOfRecords:'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='1' name='numberOfRecords' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='labelField'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='labelFormatter'>
<retval declared_type='NSFormatter*' type='@'/>
</method>
<method selector='labelOffset'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='labelRotation'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='labelShadow'>
<retval declared_type='CPTShadow*' type='@'/>
</method>
<method selector='labelTextStyle'>
<retval declared_type='CPTTextStyle*' type='@'/>
</method>
<method selector='loadNumbersForAllFieldsFromDataSourceInRecordIndexRange:'>
<arg index='0' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='needsRelabel'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='nilData'>
<retval declared_type='id' type='@'/>
</method>
<method selector='numberOfFields'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='numberOfLegendEntries'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='numbersFromDataSourceForField:recordIndexRange:'>
<arg index='0' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='plotArea'>
<retval declared_type='CPTPlotArea*' type='@'/>
</method>
<method selector='plotRangeForCoordinate:'>
<arg index='0' name='coord' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='plotRangeForField:'>
<arg index='0' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='plotSpace'>
<retval declared_type='CPTPlotSpace*' type='@'/>
</method>
<method selector='positionLabelAnnotation:forIndex:'>
<arg index='0' name='label' declared_type='CPTPlotSpaceAnnotation*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='relabel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='relabelIndexRange:'>
<arg index='0' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadData'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadDataIfNeeded'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reloadDataInIndexRange:'>
<arg index='0' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='repositionAllLabelAnnotations'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAdjustLabelAnchors:'>
<arg index='0' name='adjustLabelAnchors' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlignsPointsToPixels:'>
<arg index='0' name='alignsPointsToPixels' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributedTitle:'>
<arg index='0' name='attributedTitle' declared_type='NSAttributedString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachePrecision:'>
<arg index='0' name='cachePrecision' declared_type='CPTPlotCachePrecision' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataNeedsReloading'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataSource:'>
<arg index='0' name='dataSource' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelField:'>
<arg index='0' name='labelField' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelFormatter:'>
<arg index='0' name='labelFormatter' declared_type='NSFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelOffset:'>
<arg index='0' name='labelOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelRotation:'>
<arg index='0' name='labelRotation' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelShadow:'>
<arg index='0' name='labelShadow' declared_type='CPTShadow*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelTextStyle:'>
<arg index='0' name='labelTextStyle' declared_type='CPTTextStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsRelabel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotSpace:'>
<arg index='0' name='plotSpace' declared_type='CPTPlotSpace*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShowLabels:'>
<arg index='0' name='showLabels' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg index='0' name='title' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showLabels'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleForLegendEntryAtIndex:'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CPTPlotArea'>
<method selector='axisLabelGroup'>
<retval declared_type='CPTAxisLabelGroup*' type='@'/>
</method>
<method selector='axisSet'>
<retval declared_type='CPTAxisSet*' type='@'/>
</method>
<method selector='axisTitleGroup'>
<retval declared_type='CPTAxisLabelGroup*' type='@'/>
</method>
<method selector='borderLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='fill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='majorGridLineGroup'>
<retval declared_type='CPTGridLineGroup*' type='@'/>
</method>
<method selector='minorGridLineGroup'>
<retval declared_type='CPTGridLineGroup*' type='@'/>
</method>
<method selector='plotGroup'>
<retval declared_type='CPTPlotGroup*' type='@'/>
</method>
<method selector='setAxisLabelGroup:'>
<arg index='0' name='axisLabelGroup' declared_type='CPTAxisLabelGroup*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisSet:'>
<arg index='0' name='axisSet' declared_type='CPTAxisSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisSetLayersForType:'>
<arg index='0' name='layerType' declared_type='CPTGraphLayerType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAxisTitleGroup:'>
<arg index='0' name='axisTitleGroup' declared_type='CPTAxisLabelGroup*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderLineStyle:'>
<arg index='0' name='borderLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill:'>
<arg index='0' name='fill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMajorGridLineGroup:'>
<arg index='0' name='majorGridLineGroup' declared_type='CPTGridLineGroup*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinorGridLineGroup:'>
<arg index='0' name='minorGridLineGroup' declared_type='CPTGridLineGroup*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotGroup:'>
<arg index='0' name='plotGroup' declared_type='CPTPlotGroup*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopDownLayerOrder:'>
<arg index='0' name='topDownLayerOrder' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sublayerIndexForAxis:layerType:'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='layerType' declared_type='CPTGraphLayerType' type='i'/>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='topDownLayerOrder'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='updateAxisSetLayersForType:'>
<arg index='0' name='layerType' declared_type='CPTGraphLayerType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTPlotAreaFrame'>
<method selector='axisSet'>
<retval declared_type='CPTAxisSet*' type='@'/>
</method>
<method selector='plotArea'>
<retval declared_type='CPTPlotArea*' type='@'/>
</method>
<method selector='plotGroup'>
<retval declared_type='CPTPlotGroup*' type='@'/>
</method>
<method selector='setAxisSet:'>
<arg index='0' name='axisSet' declared_type='CPTAxisSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotGroup:'>
<arg index='0' name='plotGroup' declared_type='CPTPlotGroup*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTPlotGroup'>
<method selector='addPlot:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='insertPlot:atIndex:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removePlot:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTPlotRange'>
<method selector='compareToDecimal:'>
<arg index='0' name='number' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='CPTPlotRangeComparisonResult' type='i'/>
</method>
<method selector='compareToDouble:'>
<arg index='0' name='number' declared_type='double' type='d'/>
<retval declared_type='CPTPlotRangeComparisonResult' type='i'/>
</method>
<method selector='compareToNumber:'>
<arg index='0' name='number' declared_type='NSNumber*' type='@'/>
<retval declared_type='CPTPlotRangeComparisonResult' type='i'/>
</method>
<method selector='contains:'>
<arg index='0' name='number' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsDouble:'>
<arg index='0' name='number' declared_type='double' type='d'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='containsRange:'>
<arg index='0' name='otherRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='end'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='endDouble'>
<retval declared_type='double' type='d'/>
</method>
<method selector='initWithLocation:length:'>
<arg index='0' name='loc' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='1' name='len' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intersectsRange:'>
<arg index='0' name='otherRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isEqualToRange:'>
<arg index='0' name='otherRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='length'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='lengthDouble'>
<retval declared_type='double' type='d'/>
</method>
<method selector='location'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='locationDouble'>
<retval declared_type='double' type='d'/>
</method>
<method selector='maxLimit'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='maxLimitDouble'>
<retval declared_type='double' type='d'/>
</method>
<method selector='midPoint'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='midPointDouble'>
<retval declared_type='double' type='d'/>
</method>
<method selector='minLimit'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='minLimitDouble'>
<retval declared_type='double' type='d'/>
</method>
<method class_method='true' selector='plotRangeWithLocation:length:'>
<arg index='0' name='loc' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='1' name='len' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CPTPlotSpace'>
<method selector='allowsUserInteraction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='doublePrecisionPlotPoint:forEvent:'>
<arg index='0' name='plotPoint' declared_type='double*' type='^d'/>
<arg index='1' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doublePrecisionPlotPoint:forPlotAreaViewPoint:'>
<arg index='0' name='plotPoint' declared_type='double*' type='^d'/>
<arg index='1' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doublePrecisionPlotPoint:numberOfCoordinates:forEvent:'>
<arg index='0' name='plotPoint' declared_type='double*' type='^d'/>
<arg index='1' name='count' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doublePrecisionPlotPoint:numberOfCoordinates:forPlotAreaViewPoint:'>
<arg index='0' name='plotPoint' declared_type='double*' type='^d'/>
<arg index='1' name='count' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='graph'>
<retval declared_type='CPTGraph*' type='@'/>
</method>
<method selector='identifier'>
<retval declared_type='id' type='@'/>
</method>
<method selector='numberOfCoordinates'>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='plotAreaViewPointForDoublePrecisionPlotPoint:'>
<arg index='0' name='plotPoint' declared_type='double*' type='^d'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='plotAreaViewPointForDoublePrecisionPlotPoint:numberOfCoordinates:'>
<arg index='0' name='plotPoint' declared_type='double*' type='^d'/>
<arg index='1' name='count' type64='Q' declared_type='NSUInteger' type='I'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='plotAreaViewPointForEvent:'>
<arg index='0' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='plotAreaViewPointForPlotPoint:'>
<arg index='0' name='plotPoint' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='plotAreaViewPointForPlotPoint:numberOfCoordinates:'>
<arg index='0' name='plotPoint' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='1' name='count' type64='Q' declared_type='NSUInteger' type='I'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='plotPoint:forEvent:'>
<arg index='0' name='plotPoint' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='1' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plotPoint:forPlotAreaViewPoint:'>
<arg index='0' name='plotPoint' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='1' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plotPoint:numberOfCoordinates:forEvent:'>
<arg index='0' name='plotPoint' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='1' name='count' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plotPoint:numberOfCoordinates:forPlotAreaViewPoint:'>
<arg index='0' name='plotPoint' declared_type='NSDecimal*' type='^{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='1' name='count' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plotRangeForCoordinate:'>
<arg index='0' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='scaleBy:aboutPoint:'>
<arg index='0' name='interactionScale' type64='d' declared_type='CGFloat' type='f'/>
<arg index='1' name='interactionPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scaleToFitPlots:'>
<arg index='0' name='plots' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scaleTypeForCoordinate:'>
<arg index='0' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='CPTScaleType' type='i'/>
</method>
<method selector='setAllowsUserInteraction:'>
<arg index='0' name='allowsUserInteraction' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' name='delegate' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGraph:'>
<arg index='0' name='graph' declared_type='CPTGraph*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentifier:'>
<arg index='0' name='identifier' declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotRange:forCoordinate:'>
<arg index='0' name='newRange' declared_type='CPTPlotRange*' type='@'/>
<arg index='1' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScaleType:forCoordinate:'>
<arg index='0' name='newType' declared_type='CPTScaleType' type='i'/>
<arg index='1' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTPlotSpaceAnnotation'>
<method selector='anchorPlotPoint'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithPlotSpace:anchorPlotPoint:'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='plotPoint' declared_type='NSArray*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='plotSpace'>
<retval declared_type='CPTPlotSpace*' type='@'/>
</method>
<method selector='setAnchorPlotPoint:'>
<arg index='0' name='anchorPlotPoint' declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTPlotSymbol'>
<method selector='anchorPoint'>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method class_method='true' selector='crossPlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method class_method='true' selector='customPlotSymbolWithPath:'>
<arg index='0' name='aPath' declared_type='CGPathRef' type='^{CGPath=}'/>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method selector='customSymbolPath'>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method class_method='true' selector='dashPlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method class_method='true' selector='diamondPlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method class_method='true' selector='ellipsePlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method selector='fill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method class_method='true' selector='hexagonPlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method selector='lineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method class_method='true' selector='pentagonPlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method class_method='true' selector='plotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method class_method='true' selector='plusPlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method class_method='true' selector='rectanglePlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method selector='renderAsVectorInContext:atPoint:scale:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg index='1' name='center' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='2' name='scale' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderInContext:atPoint:scale:alignToPixels:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<arg index='1' name='center' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='2' name='scale' type64='d' declared_type='CGFloat' type='f'/>
<arg index='3' name='alignToPixels' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorPoint:'>
<arg index='0' name='anchorPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomSymbolPath:'>
<arg index='0' name='customSymbolPath' declared_type='CGPathRef' type='^{CGPath=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill:'>
<arg index='0' name='fill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineStyle:'>
<arg index='0' name='lineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadow:'>
<arg index='0' name='shadow' declared_type='CPTShadow*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg index='0' name='size' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSymbolType:'>
<arg index='0' name='symbolType' declared_type='CPTPlotSymbolType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsesEvenOddClipRule:'>
<arg index='0' name='usesEvenOddClipRule' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadow'>
<retval declared_type='CPTShadow*' type='@'/>
</method>
<method selector='size'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method class_method='true' selector='snowPlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method class_method='true' selector='starPlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method selector='symbolType'>
<retval declared_type='CPTPlotSymbolType' type='i'/>
</method>
<method class_method='true' selector='trianglePlotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method selector='usesEvenOddClipRule'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CPTRangePlot'>
<method selector='areaFill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='barLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='barWidth'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='gapHeight'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='gapWidth'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='setAreaFill:'>
<arg index='0' name='areaFill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarLineStyle:'>
<arg index='0' name='barLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarWidth:'>
<arg index='0' name='barWidth' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGapHeight:'>
<arg index='0' name='gapHeight' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGapWidth:'>
<arg index='0' name='gapWidth' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTScatterPlot'>
<method selector='areaBaseValue'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='areaBaseValue2'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='areaFill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='areaFill2'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='dataLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='indexOfVisiblePointClosestToPlotAreaPoint:'>
<arg index='0' name='viewPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='interpolation'>
<retval declared_type='CPTScatterPlotInterpolation' type='i'/>
</method>
<method selector='plotAreaPointOfVisiblePointAtIndex:'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='plotSymbol'>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method selector='plotSymbolForRecordIndex:'>
<arg index='0' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method selector='plotSymbolMarginForHitDetection'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='setAreaBaseValue2:'>
<arg index='0' name='areaBaseValue2' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAreaBaseValue:'>
<arg index='0' name='areaBaseValue' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAreaFill2:'>
<arg index='0' name='areaFill2' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAreaFill:'>
<arg index='0' name='areaFill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataLineStyle:'>
<arg index='0' name='dataLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInterpolation:'>
<arg index='0' name='interpolation' declared_type='CPTScatterPlotInterpolation' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotSymbol:'>
<arg index='0' name='plotSymbol' declared_type='CPTPlotSymbol*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotSymbolMarginForHitDetection:'>
<arg index='0' name='plotSymbolMarginForHitDetection' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTShadow'>
<method selector='setShadowInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='shadow'>
<retval declared_type='id' type='@'/>
</method>
<method selector='shadowBlurRadius'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='shadowColor'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='shadowOffset'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='CPTTextLayer'>
<method selector='attributedText'>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='initWithAttributedText:'>
<arg index='0' name='newText' declared_type='NSAttributedString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithText:'>
<arg index='0' name='newText' declared_type='NSString*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithText:style:'>
<arg index='0' name='newText' declared_type='NSString*' type='@'/>
<arg index='1' name='newStyle' declared_type='CPTTextStyle*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='maximumSize'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='setAttributedText:'>
<arg index='0' name='attributedText' declared_type='NSAttributedString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumSize:'>
<arg index='0' name='maximumSize' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setText:'>
<arg index='0' name='text' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextStyle:'>
<arg index='0' name='textStyle' declared_type='CPTTextStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeThatFits'>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='sizeToFit'>
<retval declared_type='void' type='v'/>
</method>
<method selector='text'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='textStyle'>
<retval declared_type='CPTTextStyle*' type='@'/>
</method>
</class>
<class name='CPTTextStyle'>
<method selector='attributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='color'>
<retval declared_type='CPTColor*' type='@'/>
</method>
<method selector='fontName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fontSize'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='lineBreakMode'>
<retval type64='q' declared_type='NSLineBreakMode' type='i'/>
</method>
<method selector='textAlignment'>
<retval declared_type='CPTTextAlignment' type='i'/>
</method>
<method class_method='true' selector='textStyle'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='textStyleWithAttributes:'>
<arg index='0' name='attributes' declared_type='NSDictionary*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CPTTheme'>
<method selector='applyThemeToAxisSet:'>
<arg index='0' name='axisSet' declared_type='CPTAxisSet*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyThemeToBackground:'>
<arg index='0' name='graph' declared_type='CPTGraph*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyThemeToGraph:'>
<arg index='0' name='graph' declared_type='CPTGraph*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyThemeToPlotArea:'>
<arg index='0' name='plotAreaFrame' declared_type='CPTPlotAreaFrame*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='graphClass'>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='newGraph'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='registerTheme:'>
<arg index='0' name='themeClass' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGraphClass:'>
<arg index='0' name='graphClass' declared_type='Class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='themeClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='themeNamed:'>
<arg index='0' name='theme' declared_type='NSString*' type='@'/>
<retval declared_type='CPTTheme*' type='@'/>
</method>
</class>
<class name='CPTTimeFormatter'>
<method selector='dateFormatter'>
<retval declared_type='NSDateFormatter*' type='@'/>
</method>
<method selector='initWithDateFormatter:'>
<arg index='0' name='aDateFormatter' declared_type='NSDateFormatter*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='referenceDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='setDateFormatter:'>
<arg index='0' name='dateFormatter' declared_type='NSDateFormatter*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReferenceDate:'>
<arg index='0' name='referenceDate' declared_type='NSDate*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTTradingRangePlot'>
<method selector='barCornerRadius'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='barWidth'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='decreaseFill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='decreaseLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='increaseFill'>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='increaseLineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='lineStyle'>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='plotStyle'>
<retval declared_type='CPTTradingRangePlotStyle' type='i'/>
</method>
<method selector='setBarCornerRadius:'>
<arg index='0' name='barCornerRadius' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBarWidth:'>
<arg index='0' name='barWidth' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDecreaseFill:'>
<arg index='0' name='decreaseFill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDecreaseLineStyle:'>
<arg index='0' name='decreaseLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncreaseFill:'>
<arg index='0' name='increaseFill' declared_type='CPTFill*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncreaseLineStyle:'>
<arg index='0' name='increaseLineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineStyle:'>
<arg index='0' name='lineStyle' declared_type='CPTLineStyle*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlotStyle:'>
<arg index='0' name='plotStyle' declared_type='CPTTradingRangePlotStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStickLength:'>
<arg index='0' name='stickLength' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stickLength'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='CPTXYAxis'>
<method selector='axisConstraints'>
<retval declared_type='CPTConstraints*' type='@'/>
</method>
<method selector='orthogonalCoordinateDecimal'>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='setAxisConstraints:'>
<arg index='0' name='axisConstraints' declared_type='CPTConstraints*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrthogonalCoordinateDecimal:'>
<arg index='0' name='orthogonalCoordinateDecimal' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CPTXYAxisSet'>
<method selector='xAxis'>
<retval declared_type='CPTXYAxis*' type='@'/>
</method>
<method selector='yAxis'>
<retval declared_type='CPTXYAxis*' type='@'/>
</method>
</class>
<class name='CPTXYGraph'>
<method selector='initWithFrame:xScaleType:yScaleType:'>
<arg index='0' name='newFrame' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='newXScaleType' declared_type='CPTScaleType' type='i'/>
<arg index='2' name='newYScaleType' declared_type='CPTScaleType' type='i'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CPTXYPlotSpace'>
<method selector='allowsMomentum'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='elasticGlobalXRange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='elasticGlobalYRange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='globalXRange'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='globalYRange'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='setAllowsMomentum:'>
<arg index='0' name='allowsMomentum' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setElasticGlobalXRange:'>
<arg index='0' name='elasticGlobalXRange' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setElasticGlobalYRange:'>
<arg index='0' name='elasticGlobalYRange' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGlobalXRange:'>
<arg index='0' name='globalXRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGlobalYRange:'>
<arg index='0' name='globalYRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXRange:'>
<arg index='0' name='xRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXScaleType:'>
<arg index='0' name='xScaleType' declared_type='CPTScaleType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYRange:'>
<arg index='0' name='yRange' declared_type='CPTPlotRange*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYScaleType:'>
<arg index='0' name='yScaleType' declared_type='CPTScaleType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='xRange'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='xScaleType'>
<retval declared_type='CPTScaleType' type='i'/>
</method>
<method selector='yRange'>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='yScaleType'>
<retval declared_type='CPTScaleType' type='i'/>
</method>
</class>
<class name='NSAttributedString'>
<method selector='drawInRect:inContext:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSCoder'>
<method selector='decodeCGFloatForKey:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='decodeCPTPointForKey:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='decodeCPTRectForKey:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<retval type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='decodeCPTSizeForKey:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='decodeDecimalForKey:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
</method>
<method selector='encodeCGColorSpace:forKey:'>
<arg index='0' name='colorSpace' declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
<arg index='1' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGFloat:forKey:'>
<arg index='0' name='number' type64='d' declared_type='CGFloat' type='f'/>
<arg index='1' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGImage:forKey:'>
<arg index='0' name='image' declared_type='CGImageRef' type='^{CGImage=}'/>
<arg index='1' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCGPath:forKey:'>
<arg index='0' name='path' declared_type='CGPathRef' type='^{CGPath=}'/>
<arg index='1' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCPTPoint:forKey:'>
<arg index='0' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg index='1' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCPTRect:forKey:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeCPTSize:forKey:'>
<arg index='0' name='size' type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
<arg index='1' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='encodeDecimal:forKey:'>
<arg index='0' name='number' declared_type='NSDecimal' type='{_NSDecimal=b8b4b1b1b18[8S]}'/>
<arg index='1' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='newCGColorSpaceDecodeForKey:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='CGColorSpaceRef' type='^{CGColorSpace=}'/>
</method>
<method selector='newCGImageDecodeForKey:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='CGImageRef' type='^{CGImage=}'/>
</method>
<method selector='newCGPathDecodeForKey:'>
<arg index='0' name='key' declared_type='NSString*' type='@'/>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
</class>
<class name='NSNumber'>
<method selector='cgFloatValue'>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='decimalNumber'>
<retval declared_type='NSDecimalNumber*' type='@'/>
</method>
<method selector='initWithCGFloat:'>
<arg index='0' name='number' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isGreaterThan:'>
<arg index='0' name='other' declared_type='NSNumber*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isGreaterThanOrEqualTo:'>
<arg index='0' name='other' declared_type='NSNumber*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLessThan:'>
<arg index='0' name='other' declared_type='NSNumber*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLessThanOrEqualTo:'>
<arg index='0' name='other' declared_type='NSNumber*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='numberWithCGFloat:'>
<arg index='0' name='number' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='animationCancelled:'>
<arg index='0' name='operation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationDidFinish:'>
<arg index='0' name='operation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationDidStart:'>
<arg index='0' name='operation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationDidUpdate:'>
<arg index='0' name='operation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationWillUpdate:'>
<arg index='0' name='operation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributedLegendTitleForBarPlot:recordIndex:'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='attributedLegendTitleForPieChart:recordIndex:'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='axis:labelWasSelected:'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='label' declared_type='CPTAxisLabel*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='axis:labelWasSelected:withEvent:'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='label' declared_type='CPTAxisLabel*' type='@'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='axis:minorTickLabelWasSelected:'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='label' declared_type='CPTAxisLabel*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='axis:minorTickLabelWasSelected:withEvent:'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='label' declared_type='CPTAxisLabel*' type='@'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='axis:shouldUpdateAxisLabelsAtLocations:'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='locations' declared_type='NSSet*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='axis:shouldUpdateMinorAxisLabelsAtLocations:'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='locations' declared_type='NSSet*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='axisDidRelabel:'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='axisShouldRelabel:'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='barFillForBarPlot:recordIndex:'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='barFillsForBarPlot:recordIndexRange:'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='barLineStyleForBarPlot:recordIndex:'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='barLineStyleForRangePlot:recordIndex:'>
<arg index='0' name='plot' declared_type='CPTRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='barLineStylesForBarPlot:recordIndexRange:'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='barLineStylesForRangePlot:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='barPlot:barWasSelectedAtRecordIndex:'>
<arg index='0' name='plot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='barPlot:barWasSelectedAtRecordIndex:withEvent:'>
<arg index='0' name='plot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dataForPlot:field:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='CPTNumericData*' type='@'/>
</method>
<method selector='dataForPlot:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='CPTNumericData*' type='@'/>
</method>
<method selector='dataLabelForPlot:recordIndex:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLayer*' type='@'/>
</method>
<method selector='dataLabelsForPlot:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='decreaseFillForTradingRangePlot:recordIndex:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='decreaseFillsForTradingRangePlot:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='decreaseLineStyleForTradingRangePlot:recordIndex:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='decreaseLineStylesForTradingRangePlot:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='didFinishDrawing:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='doubleForPlot:field:recordIndex:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='doublesForPlot:field:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='double*' type='^d'/>
</method>
<method selector='increaseFillForTradingRangePlot:recordIndex:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='increaseFillsForTradingRangePlot:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='increaseLineStyleForTradingRangePlot:recordIndex:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='increaseLineStylesForTradingRangePlot:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='legend:legendEntryForPlot:wasSelectedAtIndex:'>
<arg index='0' name='legend' declared_type='CPTLegend*' type='@'/>
<arg index='1' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='2' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='legend:legendEntryForPlot:wasSelectedAtIndex:withEvent:'>
<arg index='0' name='legend' declared_type='CPTLegend*' type='@'/>
<arg index='1' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='2' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='3' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='legend:shouldDrawSwatchAtIndex:forPlot:inRect:inContext:'>
<arg index='0' name='legend' declared_type='CPTLegend*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='3' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='4' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='legendTitleForBarPlot:recordIndex:'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='legendTitleForPieChart:recordIndex:'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lineStyleForTradingRangePlot:recordIndex:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='lineStylesForTradingRangePlot:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='numberForPlot:field:recordIndex:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='numberOfRecordsForPlot:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='numbersForPlot:field:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pieChart:sliceWasSelectedAtRecordIndex:'>
<arg index='0' name='plot' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pieChart:sliceWasSelectedAtRecordIndex:withEvent:'>
<arg index='0' name='plot' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plot:dataLabelWasSelectedAtRecordIndex:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plot:dataLabelWasSelectedAtRecordIndex:withEvent:'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plotSpace:didChangePlotRangeForCoordinate:'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceCancelledEvent:'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceDownEvent:atPoint:'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='2' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceDraggedEvent:atPoint:'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='2' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceUpEvent:atPoint:'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='2' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotSpace:shouldScaleBy:aboutPoint:'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='interactionScale' type64='d' declared_type='CGFloat' type='f'/>
<arg index='2' name='interactionPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotSpace:willChangePlotRangeTo:forCoordinate:'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='newRange' declared_type='CPTPlotRange*' type='@'/>
<arg index='2' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='plotSpace:willDisplaceBy:'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='proposedDisplacementVector' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='pointingDeviceCancelledEvent:'>
<arg index='0' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pointingDeviceDownEvent:atPoint:'>
<arg index='0' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='1' name='interactionPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pointingDeviceDraggedEvent:atPoint:'>
<arg index='0' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='1' name='interactionPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pointingDeviceUpEvent:atPoint:'>
<arg index='0' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='1' name='interactionPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='radialOffsetForPieChart:recordIndex:'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='radialOffsetsForPieChart:recordIndexRange:'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='rangePlot:rangeWasSelectedAtRecordIndex:'>
<arg index='0' name='plot' declared_type='CPTRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rangePlot:rangeWasSelectedAtRecordIndex:withEvent:'>
<arg index='0' name='plot' declared_type='CPTRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scatterPlot:plotSymbolWasSelectedAtRecordIndex:'>
<arg index='0' name='plot' declared_type='CPTScatterPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scatterPlot:plotSymbolWasSelectedAtRecordIndex:withEvent:'>
<arg index='0' name='plot' declared_type='CPTScatterPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sliceFillForPieChart:recordIndex:'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='sliceFillsForPieChart:recordIndexRange:'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='symbolForScatterPlot:recordIndex:'>
<arg index='0' name='plot' declared_type='CPTScatterPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method selector='symbolsForScatterPlot:recordIndexRange:'>
<arg index='0' name='plot' declared_type='CPTScatterPlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tradingRangePlot:barWasSelectedAtRecordIndex:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tradingRangePlot:barWasSelectedAtRecordIndex:withEvent:'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSString'>
<method selector='drawInRect:withTextStyle:inContext:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='style' declared_type='CPTTextStyle*' type='@'/>
<arg index='2' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sizeWithTextStyle:'>
<arg index='0' name='style' declared_type='CPTTextStyle*' type='@'/>
<retval type64='{CGSize=dd}' declared_type='CGSize' type='{CGSize=ff}'/>
</method>
</class>
<class name='_CPTConstraintsFixed'>
<method selector='initWithLowerOffset:'>
<arg index='0' name='newOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithUpperOffset:'>
<arg index='0' name='newOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToConstraint:'>
<arg index='0' name='otherConstraint' declared_type='CPTConstraints*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='positionForLowerBound:upperBound:'>
<arg index='0' name='lowerBound' type64='d' declared_type='CGFloat' type='f'/>
<arg index='1' name='upperBound' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='_CPTConstraintsRelative'>
<method selector='initWithRelativeOffset:'>
<arg index='0' name='newOffset' type64='d' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToConstraint:'>
<arg index='0' name='otherConstraint' declared_type='CPTConstraints*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='positionForLowerBound:upperBound:'>
<arg index='0' name='lowerBound' type64='d' declared_type='CGFloat' type='f'/>
<arg index='1' name='upperBound' type64='d' declared_type='CGFloat' type='f'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='_CPTFillColor'>
<method selector='fillPathInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillRect:inContext:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithColor:'>
<arg index='0' name='aColor' declared_type='CPTColor*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='_CPTFillGradient'>
<method selector='fillPathInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillRect:inContext:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithGradient:'>
<arg index='0' name='aGradient' declared_type='CPTGradient*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='_CPTFillImage'>
<method selector='fillPathInContext:'>
<arg index='0' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='fillRect:inContext:'>
<arg index='0' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithImage:'>
<arg index='0' name='anImage' declared_type='CPTImage*' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<informal_protocol name='CPTAnimationDelegate'>
<method selector='animationCancelled:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg index='0' name='operation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationDidFinish:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg index='0' name='operation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationDidStart:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg index='0' name='operation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationDidUpdate:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg index='0' name='operation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='animationWillUpdate:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg index='0' name='operation' declared_type='CPTAnimationOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CPTAxisDelegate'>
<method selector='axis:labelWasSelected:' type64='v32@0:8@16@24' type='v16@0:4@8@12'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='label' declared_type='CPTAxisLabel*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='axis:labelWasSelected:withEvent:' type64='v40@0:8@16@24^{UIEvent=#d}32' type='v20@0:4@8@12^{UIEvent=#d}16'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='label' declared_type='CPTAxisLabel*' type='@'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='axis:minorTickLabelWasSelected:' type64='v32@0:8@16@24' type='v16@0:4@8@12'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='label' declared_type='CPTAxisLabel*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='axis:minorTickLabelWasSelected:withEvent:' type64='v40@0:8@16@24^{UIEvent=#d}32' type='v20@0:4@8@12^{UIEvent=#d}16'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='label' declared_type='CPTAxisLabel*' type='@'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='axis:shouldUpdateAxisLabelsAtLocations:' type64='B32@0:8@16@24' type='B16@0:4@8@12'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='locations' declared_type='NSSet*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='axis:shouldUpdateMinorAxisLabelsAtLocations:' type64='B32@0:8@16@24' type='B16@0:4@8@12'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<arg index='1' name='locations' declared_type='NSSet*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='axisDidRelabel:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='axisShouldRelabel:' type64='B24@0:8@16' type='B12@0:4@8'>
<arg index='0' name='axis' declared_type='CPTAxis*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='CPTBarPlotDataSource'>
<method selector='attributedLegendTitleForBarPlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='barFillForBarPlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='barFillsForBarPlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='barLineStyleForBarPlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='barLineStylesForBarPlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='legendTitleForBarPlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='barPlot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CPTBarPlotDelegate'>
<method selector='barPlot:barWasSelectedAtRecordIndex:' type64='v32@0:8@16Q24' type='v16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='barPlot:barWasSelectedAtRecordIndex:withEvent:' type64='v40@0:8@16Q24^{UIEvent=#d}32' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg index='0' name='plot' declared_type='CPTBarPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CPTLegendDelegate'>
<method selector='legend:legendEntryForPlot:wasSelectedAtIndex:' type64='v40@0:8@16@24Q32' type='v20@0:4@8@12I16'>
<arg index='0' name='legend' declared_type='CPTLegend*' type='@'/>
<arg index='1' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='2' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='legend:legendEntryForPlot:wasSelectedAtIndex:withEvent:' type64='v48@0:8@16@24Q32^{UIEvent=#d}40' type='v24@0:4@8@12I16^{UIEvent=#d}20'>
<arg index='0' name='legend' declared_type='CPTLegend*' type='@'/>
<arg index='1' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='2' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='3' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='legend:shouldDrawSwatchAtIndex:forPlot:inRect:inContext:' type64='B80@0:8@16Q24@32{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGContext=}72' type='B40@0:4@8I12@16{CGRect={CGPoint=ff}{CGSize=ff}}20^{CGContext=}36'>
<arg index='0' name='legend' declared_type='CPTLegend*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='3' name='rect' type64='{CGRect={CGPoint=dd}{CGSize=dd}}' declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='4' name='context' declared_type='CGContextRef' type='^{CGContext=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPieChartDataSource'>
<method selector='attributedLegendTitleForPieChart:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSAttributedString*' type='@'/>
</method>
<method selector='legendTitleForPieChart:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='radialOffsetForPieChart:recordIndex:' type64='d32@0:8@16Q24' type='f16@0:4@8I12'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval type64='d' declared_type='CGFloat' type='f'/>
</method>
<method selector='radialOffsetsForPieChart:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sliceFillForPieChart:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='sliceFillsForPieChart:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='pieChart' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPieChartDelegate'>
<method selector='pieChart:sliceWasSelectedAtRecordIndex:' type64='v32@0:8@16Q24' type='v16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='pieChart:sliceWasSelectedAtRecordIndex:withEvent:' type64='v40@0:8@16Q24^{UIEvent=#d}32' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg index='0' name='plot' declared_type='CPTPieChart*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPlotDataSource'>
<method selector='dataForPlot:field:recordIndexRange:' type64='@48@0:8@16Q24{_NSRange=QQ}32' type='@24@0:4@8I12{_NSRange=II}16'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='CPTNumericData*' type='@'/>
</method>
<method selector='dataForPlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='CPTNumericData*' type='@'/>
</method>
<method selector='dataLabelForPlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLayer*' type='@'/>
</method>
<method selector='dataLabelsForPlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='doubleForPlot:field:recordIndex:' type64='d40@0:8@16Q24Q32' type='d20@0:4@8I12I16'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='doublesForPlot:field:recordIndexRange:' type64='^d48@0:8@16Q24{_NSRange=QQ}32' type='^d24@0:4@8I12{_NSRange=II}16'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='double*' type='^d'/>
</method>
<method selector='numberForPlot:field:recordIndex:' type64='@40@0:8@16Q24Q32' type='@20@0:4@8I12I16'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='numberOfRecordsForPlot:' type64='Q24@0:8@16' type='I12@0:4@8'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval type64='Q' declared_type='NSUInteger' type='I'/>
</method>
<method selector='numbersForPlot:field:recordIndexRange:' type64='@48@0:8@16Q24{_NSRange=QQ}32' type='@24@0:4@8I12{_NSRange=II}16'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='fieldEnum' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPlotDelegate'>
<method selector='didFinishDrawing:' type64='v24@0:8@16' type='v12@0:4@8'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plot:dataLabelWasSelectedAtRecordIndex:' type64='v32@0:8@16Q24' type='v16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plot:dataLabelWasSelectedAtRecordIndex:withEvent:' type64='v40@0:8@16Q24^{UIEvent=#d}32' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg index='0' name='plot' declared_type='CPTPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CPTPlotSpaceDelegate'>
<method selector='plotSpace:didChangePlotRangeForCoordinate:' type64='v28@0:8@16i24' type='v16@0:4@8i12'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceCancelledEvent:' type64='B32@0:8@16^{UIEvent=#d}24' type='B16@0:4@8^{UIEvent=#d}12'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceDownEvent:atPoint:' type64='B48@0:8@16^{UIEvent=#d}24{CGPoint=dd}32' type='B24@0:4@8^{UIEvent=#d}12{CGPoint=ff}16'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='2' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceDraggedEvent:atPoint:' type64='B48@0:8@16^{UIEvent=#d}24{CGPoint=dd}32' type='B24@0:4@8^{UIEvent=#d}12{CGPoint=ff}16'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='2' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotSpace:shouldHandlePointingDeviceUpEvent:atPoint:' type64='B48@0:8@16^{UIEvent=#d}24{CGPoint=dd}32' type='B24@0:4@8^{UIEvent=#d}12{CGPoint=ff}16'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='2' name='point' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotSpace:shouldScaleBy:aboutPoint:' type64='B48@0:8@16d24{CGPoint=dd}32' type='B24@0:4@8f12{CGPoint=ff}16'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='interactionScale' type64='d' declared_type='CGFloat' type='f'/>
<arg index='2' name='interactionPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='plotSpace:willChangePlotRangeTo:forCoordinate:' type64='@36@0:8@16@24i32' type='@20@0:4@8@12i16'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='newRange' declared_type='CPTPlotRange*' type='@'/>
<arg index='2' name='coordinate' declared_type='CPTCoordinate' type='i'/>
<retval declared_type='CPTPlotRange*' type='@'/>
</method>
<method selector='plotSpace:willDisplaceBy:' type64='{CGPoint=dd}40@0:8@16{CGPoint=dd}24' type='{CGPoint=ff}20@0:4@8{CGPoint=ff}12'>
<arg index='0' name='space' declared_type='CPTPlotSpace*' type='@'/>
<arg index='1' name='proposedDisplacementVector' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
</informal_protocol>
<informal_protocol name='CPTRangePlotDataSource'>
<method selector='barLineStyleForRangePlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='barLineStylesForRangePlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='plot' declared_type='CPTRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CPTRangePlotDelegate'>
<method selector='rangePlot:rangeWasSelectedAtRecordIndex:' type64='v32@0:8@16Q24' type='v16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='rangePlot:rangeWasSelectedAtRecordIndex:withEvent:' type64='v40@0:8@16Q24^{UIEvent=#d}32' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg index='0' name='plot' declared_type='CPTRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CPTResponder'>
<method selector='pointingDeviceCancelledEvent:' type64='B24@0:8^{UIEvent=#d}16' type='B12@0:4^{UIEvent=#d}8'>
<arg index='0' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pointingDeviceDownEvent:atPoint:' type64='B40@0:8^{UIEvent=#d}16{CGPoint=dd}24' type='B20@0:4^{UIEvent=#d}8{CGPoint=ff}12'>
<arg index='0' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='1' name='interactionPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pointingDeviceDraggedEvent:atPoint:' type64='B40@0:8^{UIEvent=#d}16{CGPoint=dd}24' type='B20@0:4^{UIEvent=#d}8{CGPoint=ff}12'>
<arg index='0' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='1' name='interactionPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pointingDeviceUpEvent:atPoint:' type64='B40@0:8^{UIEvent=#d}16{CGPoint=dd}24' type='B20@0:4^{UIEvent=#d}8{CGPoint=ff}12'>
<arg index='0' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<arg index='1' name='interactionPoint' type64='{CGPoint=dd}' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='CPTScatterPlotDataSource'>
<method selector='symbolForScatterPlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTScatterPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTPlotSymbol*' type='@'/>
</method>
<method selector='symbolsForScatterPlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='plot' declared_type='CPTScatterPlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CPTScatterPlotDelegate'>
<method selector='scatterPlot:plotSymbolWasSelectedAtRecordIndex:' type64='v32@0:8@16Q24' type='v16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTScatterPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='scatterPlot:plotSymbolWasSelectedAtRecordIndex:withEvent:' type64='v40@0:8@16Q24^{UIEvent=#d}32' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg index='0' name='plot' declared_type='CPTScatterPlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CPTTradingRangePlotDataSource'>
<method selector='decreaseFillForTradingRangePlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='decreaseFillsForTradingRangePlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='decreaseLineStyleForTradingRangePlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='decreaseLineStylesForTradingRangePlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='increaseFillForTradingRangePlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTFill*' type='@'/>
</method>
<method selector='increaseFillsForTradingRangePlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='increaseLineStyleForTradingRangePlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='increaseLineStylesForTradingRangePlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='lineStyleForTradingRangePlot:recordIndex:' type64='@32@0:8@16Q24' type='@16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='CPTLineStyle*' type='@'/>
</method>
<method selector='lineStylesForTradingRangePlot:recordIndexRange:' type64='@40@0:8@16{_NSRange=QQ}24' type='@20@0:4@8{_NSRange=II}12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='indexRange' type64='{_NSRange=QQ}' declared_type='NSRange' type='{_NSRange=II}'/>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='CPTTradingRangePlotDelegate'>
<method selector='tradingRangePlot:barWasSelectedAtRecordIndex:' type64='v32@0:8@16Q24' type='v16@0:4@8I12'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tradingRangePlot:barWasSelectedAtRecordIndex:withEvent:' type64='v40@0:8@16Q24^{UIEvent=#d}32' type='v20@0:4@8I12^{UIEvent=#d}16'>
<arg index='0' name='plot' declared_type='CPTTradingRangePlot*' type='@'/>
<arg index='1' name='idx' type64='Q' declared_type='NSUInteger' type='I'/>
<arg index='2' name='event' declared_type='UIEvent*' type='^{UIEvent=#d}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
